!function(l,d){if("object"==typeof exports&&"object"==typeof module)module.exports=d();else if("function"==typeof define&&define.amd)define([],d);else{var V=d();for(var W in V)("object"==typeof exports?exports:l)[W]=V[W]}}(window,(function(){return function(l){var d={};function V(W){if(d[W])return d[W].exports;var a=d[W]={i:W,l:!1,exports:{}};return l[W].call(a.exports,a,a.exports,V),a.l=!0,a.exports}return V.m=l,V.c=d,V.d=function(l,d,W){V.o(l,d)||Object.defineProperty(l,d,{enumerable:!0,get:W})},V.r=function(l){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(l,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(l,"__esModule",{value:!0})},V.t=function(l,d){if(1&d&&(l=V(l)),8&d)return l;if(4&d&&"object"==typeof l&&l&&l.__esModule)return l;var W=Object.create(null);if(V.r(W),Object.defineProperty(W,"default",{enumerable:!0,value:l}),2&d&&"string"!=typeof l)for(var a in l)V.d(W,a,function(d){return l[d]}.bind(null,a));return W},V.n=function(l){var d=l&&l.__esModule?function(){return l.default}:function(){return l};return V.d(d,"a",d),d},V.o=function(l,d){return Object.prototype.hasOwnProperty.call(l,d)},V.p="",V(V.s=4)}([,function(module,exports,__webpack_require__){eval('!function(t,e){if(true)module.exports=e();else { var i, a; }}(window,(function(){return function(t){var e={};function a(i){if(e[i])return e[i].exports;var c=e[i]={i:i,l:!1,exports:{}};return t[i].call(c.exports,c,c.exports,a),c.l=!0,c.exports}return a.m=t,a.c=e,a.d=function(t,e,i){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var c in t)a.d(i,c,function(e){return t[e]}.bind(null,c));return i},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=2)}([function(module,exports,__webpack_require__){eval(\'var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var Ycc=function a(b){this.ctx=null,this.canvasDom=null,this.layerList=[],this.photoManager=null,this.layerManager=null,this.ticker=null,this["debugger"]=null,this.loader=new a.Loader(this),this.ajax=new a.Ajax,this.baseUI=null,this.gesture=null,this.config=a.utils.extend({debugDrawContainer:!1,appenv:"h5"},b||{}),this.isMobile=a.utils.isMobile(),this.stageW=0,this.stageH=0,this.dpi=this.getSystemInfo().devicePixelRatio};if(Ycc.prototype.getStageWidth=function(){return this.canvasDom.width},Ycc.prototype.getStageHeight=function(){return this.canvasDom.height},Ycc.prototype.bindCanvas=function(a){return this.canvasDom=a,this.ctx=a.getContext("2d"),this.ctx.canvas.getBoundingClientRect=this.ctx.canvas.getBoundingClientRect?this.ctx.canvas.getBoundingClientRect:function(){return{left:0,top:0}},this.layerList=[],this.photoManager=new Ycc.PhotoManager(this),this.layerManager=new Ycc.LayerManager(this),this.ticker=new Ycc.Ticker(this),this["debugger"]=new Ycc.Debugger(this),this.baseUI=new Ycc.UI(this),this.init(),this},Ycc.prototype.init=function(){this._initStageGestureEvent(),this.ticker.start(6)},Ycc.prototype._initStageGestureEvent=function(){function a(a){var b=parseInt(a.clientX-f.ctx.canvas.getBoundingClientRect().left),c=parseInt(a.clientY-f.ctx.canvas.getBoundingClientRect().top);h="";var d=f.getUIFromPointer(new Ycc.Math.Dot(b,c));d&&(g[a.identifier]=d,d.triggerUIEventBubbleUp(a.type,b,c)),e(a.type,b,c)}function b(a){var b=parseInt(a.clientX-f.ctx.canvas.getBoundingClientRect().left),c=parseInt(a.clientY-f.ctx.canvas.getBoundingClientRect().top);if(h!==b+"_"+c){h=b+"_"+c;var d=g[a.identifier];d&&(g[a.identifier]=d,d.triggerUIEventBubbleUp(a.type,b,c)),e(a.type,b,c)}}function c(a){var b=parseInt(a.clientX-f.ctx.canvas.getBoundingClientRect().left),c=parseInt(a.clientY-f.ctx.canvas.getBoundingClientRect().top),d=g[a.identifier];d&&(g[a.identifier]=d,d.triggerUIEventBubbleUp(a.type,b,c),d=null,g[a.identifier]=null),e(a.type,b,c)}function d(a){var b=parseInt(a.clientX-f.ctx.canvas.getBoundingClientRect().left),c=parseInt(a.clientY-f.ctx.canvas.getBoundingClientRect().top),d=f.getUIFromPointer(new Ycc.Math.Dot(b,c));d&&d.triggerUIEventBubbleUp(a.type,b,c,a),e(a.type,b,c)}function e(a,b,c){for(var d=f.layerList.length-1;d>=0;d--){var e=f.layerList[d];e.enableEventManager&&e.enableEventManager&&e.triggerListener(a,new Ycc.Event({type:a,x:b,y:c}))}}var f=this,g={},h="",i=new Ycc.Gesture({target:this.ctx.canvas});this.gesture=i,i.addListener("tap",d),i.addListener("longtap",d),i.addListener("doubletap",d),i.addListener("swipe",d),i.addListener("swipeleft",d),i.addListener("swiperight",d),i.addListener("swipeup",d),i.addListener("swipedown",d),i.addListener("dragstart",a),i.addListener("dragging",b),i.addListener("dragend",c),i.addListener("mousemove",d)},Ycc.prototype.clearStage=function(){this.ctx.clearRect(0,0,this.getStageWidth(),this.getStageHeight())},Ycc.prototype.findLayerById=function(a){for(var b=0;b<this.layerList.length;b++){var c=this.layerList[b];if(c.id===a)return c}return null},Ycc.prototype.findUiById=function(a){for(var b=0;b<this.layerList.length;b++)for(var c=this.layerList[b],d=0;d<c.uiList.length;d++){var e=c.uiList[d];if(e.id===a)return e}return null},Ycc.prototype.getUIFromPointer=function(a,b){var c=this;b=!Ycc.utils.isBoolean(b)||b;for(var d=c.layerList.length-1;d>=0;d--){var e=c.layerList[d];if(!e.ghost&&(!b||e.show)){var f=e.getUIFromPointer(a,b);if(f)return f}}return null},Ycc.prototype.getUIListFromPointer=function(a,b){var c=this;b=b||{uiIsShow:!0,uiIsGhost:!1};for(var d=[],e=c.layerList.length-1;e>=0;e--){var f=c.layerList[e];if(f.show){var g=f.getUIListFromPointer(a);d=d.concat(g)}}return d=d.filter(function(a){return a.show===b.uiIsShow&&a.ghost===b.uiIsGhost})},Ycc.prototype.createCanvas=function(a){a=a||{};var b=Ycc.utils.mergeObject({width:this.getSystemInfo().windowWidth,height:this.getSystemInfo().windowHeight,dpiAdaptation:!1,canvasDom:null},a),c=b.canvasDom||document.createElement("canvas"),d=this.getSystemInfo().devicePixelRatio;return b.dpiAdaptation?(c.width=b.width*d,c.height=b.height*d,c.style&&(c.style.width=b.width+"px")):(c.width=b.width,c.height=b.height),c.style&&(c.style.display="block"),c},Ycc.prototype.getSystemInfo=function(){return{model:"iPhone 5",pixelRatio:window.devicePixelRatio||1,windowWidth:window.innerWidth,windowHeight:window.innerHeight,screenWidth:320,screenHeight:568,devicePixelRatio:window.devicePixelRatio||1}},Ycc.prototype.createCacheCtx=function(a){a=a||{width:this.getStageWidth(),height:this.getStageHeight()};var b=this.createCanvas({width:a.width,height:a.height}).getContext("2d");return document.body.appendChild(b.canvas),b},function(a){a.utils={},a.utils.extend=function(b,c,d){d&&(c=a.utils.deepClone(c));for(var e in b)b.hasOwnProperty(e)&&c&&"undefined"!=typeof c[e]&&(b[e]=c[e]);return b},a.utils.mergeObject=function(a,b){b=b||{};for(var c in b)b.hasOwnProperty(c)&&"undefined"!=typeof b[c]&&(a[c]=b[c]);return a},a.utils.isString=function(a){return"string"==typeof a},a.utils.isNum=function(a){return"number"==typeof a},a.utils.isBoolean=function(a){return"boolean"==typeof a},a.utils.isObj=function(a){return"object"==typeof a},a.utils.isFn=function(a){return"function"==typeof a},a.utils.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)},a.utils.isMobile=function(){for(var a=navigator.userAgent,b=["Android","iPhone","SymbianOS","Windows Phone","iPad","iPod"],c=!1,d=0;d<b.length;d++)if(a.indexOf(b[d])>0){c=!0;break}return c},a.utils.deepClone=function(b){function c(b){var e={};for(var f in b)b.hasOwnProperty(f)&&(e[f]=b[f],a.utils.isArray(b[f])?e[f]=d(b[f]):a.utils.isObj(b[f])?e[f]=c(b[f]):e[f]=b[f]);return e}function d(b){for(var e=[],f=null,g=0;g<b.length;g++)f=b[g],a.utils.isArray(f)?e.push(d(f)):a.utils.isObj(f)?e.push(c(f)):e.push(f);return e}return a.utils.isArray(b)?d(b):c(b)},a.utils.renderTpl=function(a,b){return a.replace(/__.+?__/g,function(a){console.log("匹配到的文本--\\x3e",a);var c=a.slice(2).slice(0,-2).trim();return void 0!==b[c]?b[c]:a})},a.utils.releaseObject=function(a){for(var b in a)a.hasOwnProperty(b)&&delete a[b]},a.utils.releaseArray=function(a){a.length=0},a.utils.isWx=function(){return"undefined"!=typeof wx}}(Ycc),function(a){a.utils.extend;a.Math=function(){},a.Math.Dot=function(a){this.x=0,this.y=0;var b=arguments.length;1===b?(this.x=a.x,this.y=a.y):2===b&&(this.x=arguments[0],this.y=arguments[1])},a.Math.Dot.prototype.isInRect=function(a){return this.x>=a.x&&this.x<=a.x+a.width&&this.y>=a.y&&this.y<=a.y+a.height},a.Math.Dot.prototype.isEqual=function(a){return this.x===a.x&&this.y===a.y},a.Math.Dot.prototype.plus=function(b){return new a.Math.Dot(this.x+b.x,this.y+b.y)},a.Math.Dot.prototype.rotate=function(b,c){c=c||new a.Math.Dot(0,0);var d=this.x,e=this.y,f=c.x,g=c.y,h=(d-f)*Math.cos(b/180*Math.PI)-(e-g)*Math.sin(b/180*Math.PI)+f,i=(e-g)*Math.cos(b/180*Math.PI)+(d-f)*Math.sin(b/180*Math.PI)+g;return new a.Math.Dot(h,i)},a.Math.Dot.threeDotIsOnLine=function(a,b,c){if(a.isEqual(b)||a.isEqual(c)||b.isEqual(c))return!0;if(a.x===b.x&&b.x===c.x)return!0;var d=Math.abs(a.y-b.y)/Math.abs(a.x-b.x),e=Math.abs(a.y-c.y)/Math.abs(a.x-c.x);return d===e},a.Math.Rect=function(b){this.yccClass=a.Math.Rect,this.x=0,this.y=0,this.width=0,this.height=0;var c=arguments.length;1===c?(this.x=b.x,this.y=b.y,this.width=b.width,this.height=b.height):3===c?(this.x=arguments[0].x,this.y=arguments[0].y,this.width=arguments[1],this.height=arguments[2]):4===c&&(this.x=arguments[0],this.y=arguments[1],this.width=arguments[2],this.height=arguments[3]),this.toPositive()},a.Math.Rect.prototype.toPositive=function(){var a=this.x,b=this.y,c=this.x+this.width,d=this.y+this.height;this.x=a<c?a:c,this.y=b<d?b:d,this.width=Math.abs(this.width),this.height=Math.abs(this.height)},a.Math.Rect.prototype.getVertices=function(){return[new a.Math.Dot(this.x,this.y),new a.Math.Dot(this.x+this.width,this.y),new a.Math.Dot(this.x+this.width,this.y+this.height),new a.Math.Dot(this.x,this.y+this.height),new a.Math.Dot(this.x,this.y)]},a.Math.Rect.prototype.updateByVertices=function(b){return a.utils.isArray(b)?(this.x=b[0].x,this.y=b[0].y,this.width=b[1].x-this.x,void(this.height=b[2].y-this.y)):console.error("参数必须是数组！")},a.Math.Vector=function(){this.x=0,this.y=0,this.z=0,3!==arguments.length&&2!==arguments.length||(this.x=arguments[0]||0,this.y=arguments[1]||0,this.z=arguments[2]||0),1===arguments.length&&(a.utils.isObj(arguments[0])||console.error("constructor need a objec as param!"),this.x=arguments[0].x||0,this.y=arguments[0].y||0,this.z=arguments[0].z||0)},a.Math.Vector.prototype.dot=function(a){return this.x*a.x+this.y*a.y+this.z*a.z},a.Math.Vector.prototype.cross=function(b){var c=new a.Math.Vector;return c.x=this.y*b.z-b.y*this.z,c.y=b.x*this.z-this.x*b.z,c.z=this.x*b.y-b.x*this.y,c},a.Math.Vector.prototype.getLength=function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z,2)},a.Math.Matrix=function(a,b,c){this.data=a,this.m=b,this.n=c},a.Math.Matrix.prototype.dot=function(b){if(b.m!==this.n||b.n!==this.m)return console.error("两个矩阵的行数和列数不对应，不能相乘！");for(var c=new a.Math.Matrix([],this.m,this.m),d=1;d<=this.m;d++)for(var e=1;e<=this.m;e++){for(var f=0,g=1;g<=this.n;g++)f+=this.get(d,g)*b.get(g,e);c.set(d,e,f)}return c},a.Math.Matrix.prototype.get=function(a,b){return this.data[(a-1)*this.n+b-1]},a.Math.Matrix.prototype.set=function(a,b,c){this.data[(a-1)*this.n+b-1]=c}}(Ycc),function(a){var b=1,c={};a.Tree=function(){this.$id=b++,this.$parentID=null,this.children=[],this.data=null,c[this.$id]=this},a.Tree.release=function(a){var b=a.getParent();if(b){var d=b.children,e=d.indexOf(a);e!==-1&&(d[e]=null)}delete c[a.$id],a.children.length=0,a.data=null},a.Tree.getNodeMap=function(){return c},a.Tree.prototype.getNodeMap=function(){return c},a.Tree.prototype.getParent=function(){return this.$parentID?c[this.$parentID]:null},a.Tree.prototype.addChildTree=function(a){return a.$parentID?console.error("sub tree\\\'s parent has exist! can\\\'t add!",a):(a.$parentID=this.$id,this.children.push(a),this)},a.Tree.prototype.removeChildTree=function(a){var b=this.children.indexOf(a);return b===-1?this:(this.children.splice(b,1),this)},a.Tree.prototype.getDepth=function(){var a=this,b=1;if(a.children.length>0)for(var c=0;c<a.children.length;c++){var d=a.children[c].getDepth();b=d+1>b?d+1:b}return b},a.Tree.prototype.itor=function(a){function b(a){if(a.call(h,h))return!0;if(h.children.length>0)for(var b=0;b<h.children.length;b++)if(h.children[b].itor().each(a))return!0;return!1}function c(a){if(h.children.length>0)for(var b=0;b<h.children.length;b++)if(h.children[b].itor().leftChildFirst(a))return!0;if(a.call(h,h))return!0}function d(a){if(h.children.length>0)for(var b=h.children.length-1;b>=0;b--)if(h.children[b].itor().rightChildFirst(a))return!0;if(a.call(h,h))return!0}function e(a){f([h],a)}function f(b,c,d){if(0===b.length)return!0;d=d||0,d++;for(var e=a.reverse?g(b):b,i=[],j=!1,k=0;k<e.length;k++){var l=c.call(h,e[k],d);if(l===!0){j=!0;break}l!==-1&&(i=i.concat(a.reverse?g(e[k].children):e[k].children))}return j&&(i=[]),a.reverse&&i.reverse(),f(i,c,d)}function g(a){for(var b=[],c=a.length-1;c>=0;c--)b.push(a[c]);return b}var h=this;return a=a||{reverse:!1},{each:b,leftChildFirst:c,rightChildFirst:d,depthDown:e}},a.Tree.prototype.toNodeList=function(){var a=[];return this.itor().depthDown(function(b){a.push(b)}),a},a.Tree.prototype.getNodeListGroupByLayer=function(){var a={};return this.itor().depthDown(function(b,c){a[c]||(a[c]=[]),a[c].push(b)}),a},a.Tree.prototype.getParentList=function(){for(var a=this,b=[];a.$parentID;){var d=c[a.$parentID];b.unshift(d),a=d}return b},a.Tree.prototype.getBrotherList=function(){var a=[];return a=this.$parentID?c[this.$parentID].children:[this]},a.Tree.createByJSON=function(b){var c=new a.Tree;if(c.data=b.data,a.utils.isArray(b.children)&&b.children.length>0)for(var d=0;d<b.children.length;d++)c.addChildTree(a.Tree.createByJSON(b.children[d]));return c},a.Tree.createByNodes=function(b){if(!a.utils.isArray(b)||0===b.length)return console.error("need an Array as param!");var c=null,d=[];return b.forEach(function(b){var e=new a.Tree;e.data=b,d.push(e),a.utils.isNum(b.parentID)||b.parentID||(c=e)}),d.forEach(function(a){d.forEach(function(b){b.data.parentID===a.data.id&&a.addChildTree(b)})}),c}}(Ycc),function(a){var b=1,c=1,d=1,e={},f={};a.Graph=function(a){this.type=a||1,this.$id=d++,this.vList=[],this.eList=[]},a.Graph.prototype.getMapV=function(){return e},a.Graph.prototype.getMapE=function(){return f},a.Graph.prototype.bfs=function(a,b,c){if(a=a||[],c=c||[],c.length===this.vList.length)return!0;if(0===a.length){for(var d=null,f=0;f<this.vList.length;f++)if(c.indexOf(this.vList[f].$id)===-1){d=this.vList[f].$id;break}return this.bfs([d],b,c)}for(var g=null,h=0;h<a.length;h++){if(g=e[a[h]],b.call(this,g))return!0;c.push(g.$id)}for(var i=[],j=0;j<a.length;j++){g=e[a[j]];var k=g.getAccessibleIds().filter(function(a){return c.indexOf(a)===-1});i=i.concat(k)}return this.bfs(i,b,c)},a.Graph.prototype.dfs=function(a,b,c){c=c||[];var d=e[a];if(c.push(d.$id),b.call(this,d))return!0;for(var f=d.getAccessibleIds(),g=0;g<f.length;g++){var h=f[g];if(c.indexOf(h)===-1&&this.dfs(h,b,c))return!0}if(c.length===this.vList.length)return!0;for(var i=null,j=0;j<this.vList.length;j++)if(c.indexOf(this.vList[j].$id)===-1){i=this.vList[j].$id;break}return this.dfs(i,b,c)},a.Graph.createDirectedGraph=function(b,c){var d=new a.Graph(1),e=d.vList,f=d.eList;return b.forEach(function(b){e.push(new a.Graph.DirectedV(b))}),c.forEach(function(b){for(var c=null,d=null,g=new a.Graph.DirectedE,h=0;h<e.length&&(!c||!d);h++){var i=e[h];i.data.id===b.fromId&&(c=i,i.outIDs.push(g.$id)),i.data.id===b.toId&&(d=i,i.inIDs.push(g.$id))}g.init(c.$id,d.$id,b),f.push(g)}),d},a.Graph.DirectedV=function(a){this.$id=b++,this.data=a,this.inIDs=[],this.outIDs=[],e[this.$id]=this},a.Graph.DirectedV.prototype.getAccessibleIds=function(){var a=[];return this.outIDs.forEach(function(b){a.push(f[b].toID)}),a},a.Graph.DirectedE=function(){this.$id=c++,this.data=null,this.fromID=null,this.toID=null,f[this.$id]=this},a.Graph.DirectedE.prototype.init=function(a,b,c){this.fromID=a,this.toID=b,this.data=c},a.Graph.createUnDirectedGraph=function(b,c){var d=new a.Graph(2),e=d.vList,f=d.eList;return b.forEach(function(b){e.push(new a.Graph.UnDirectedV(b))}),c.forEach(function(b){for(var c=[],d=new a.Graph.UnDirectedE,g=0;g<e.length;g++){var h=e[g];if(2===c.length)break;h.data.id!==b.ids[0]&&h.data.id!==b.ids[1]||(c.push(h.$id),h.eIDs.push(d.$id))}d.init(c,b),f.push(d)}),d},a.Graph.UnDirectedV=function(a){this.$id=b++,this.data=a,this.eIDs=[],e[this.$id]=this},a.Graph.UnDirectedV.prototype.getAccessibleIds=function(){for(var a=[],b=0;b<this.eIDs.length;b++){var c=f[this.eIDs[b]];c.vIDs[0]===this.$id&&a.push(c.vIDs[1]),c.vIDs[1]===this.$id&&a.push(c.vIDs[0])}return a},a.Graph.UnDirectedE=function(){this.$id=c++,this.data=null,this.vIDs=[],f[this.$id]=this},a.Graph.UnDirectedE.prototype.init=function(a,b){this.vIDs=a,this.data=b}}(Ycc),function(a){function b(a){this.createTime=Date.now(),this.deltaTime=a.deltaTime,this.fps=parseInt(1e3/this.deltaTime),this.frameCount=a.frameAllCount,this.isRendered=!1}a.Ticker=function(b){this.yccClass=a.Ticker,this.yccInstance=b,this.currentFrame=null,this.startTime=Date.now(),this.lastFrameTime=this.startTime,this.lastFrameTickerCount=0,this.deltaTime=0,this.deltaTimeExpect=0,this.deltaTimeRatio=1,this.frameListenerList=[],this.defaultFrameRate=60,this.defaultDeltaTime=1e3/this.defaultFrameRate,this.tickerSpace=1,this.frameAllCount=0,this.timerTickCount=0,this._timerId=0,this._isRunning=!1},a.Ticker.prototype.start=function(a){function c(a){e.timerTickCount++,e.timerTickCount-e.lastFrameTickerCount===e.tickerSpace&&(e.frameAllCount++,e.deltaTime=a-e.lastFrameTime,e.deltaTimeRatio=e.deltaTime/e.deltaTimeExpect,e.lastFrameTime+=e.deltaTime,e.lastFrameTickerCount=e.timerTickCount,e.currentFrame=new b(e),e.broadcastFrameEvent(e.currentFrame),e.broadcastToLayer(e.currentFrame)),e._timerId=d(c)}var d=this.yccInstance.canvasDom.requestAnimationFrame?this.yccInstance.canvasDom.requestAnimationFrame:requestAnimationFrame||webkitRequestAnimationFrame||mozRequestAnimationFrame||oRequestAnimationFrame||msRequestAnimationFrame,e=this;e.currentFrame=null,e.timerTickCount=0,e.lastFrameTickerCount=0,a=a?a:e.defaultFrameRate,e.tickerSpace=parseInt(60/a)||1,e.deltaTimeExpect=1e3/a,e.frameAllCount=0,e.startTime=Date.now(),e._isRunning||(d||(d=function(a){return setTimeout(function(){a(Date.now())},1e3/60)}),e._timerId=d(c),e._isRunning=!0)},a.Ticker.prototype.stop=function(){var a=this.yccInstance.canvasDom.cancelAnimationFrame?this.yccInstance.canvasDom.cancelAnimationFrame:cancelAnimationFrame||webkitCancelAnimationFrame||mozCancelAnimationFrame||oCancelAnimationFrame;a||(a=function(a){return clearTimeout(a)}),a(this._timerId),this._isRunning=!1,this.currentFrame=null},a.Ticker.prototype.addFrameListener=function(a){this.frameListenerList.push(a)},a.Ticker.prototype.removeFrameListener=function(a){var b=this.frameListenerList.indexOf(a);b!==-1&&this.frameListenerList.splice(b,1)},a.Ticker.prototype.broadcastFrameEvent=function(b){for(var c=0;c<this.frameListenerList.length;c++){var d=this.frameListenerList[c];a.utils.isFn(d)&&d(b)}},a.Ticker.prototype.broadcastToLayer=function(a){for(var b=0;b<this.yccInstance.layerList.length;b++){var c=this.yccInstance.layerList[b];c.show&&c.enableFrameEvent&&c.onFrameComing(a)}}}(Ycc),function(a){a.Debugger=function(b){this.yccClass=a.Debugger,this.yccInstance=b,this.deltaTime=null,this.deltaTimeExpect=null,this.frameAllCount=null,this.deltaTimeAverage=null,this.renderTime=null,this.renderUiCount=null,this.totalJSHeapSize=null,this.usedJSHeapSize=null,this.jsHeapSizeLimit=null,this.fields=[],this.rect=null,this.layer=null},a.Debugger.prototype.init=function(){this.rect=new a.UI.Rect({name:"debuggerRect",rect:new a.Math.Rect(10,10,200,140),color:"rgba(255,255,0,0.5)"}),this.layer=yccInstance.layerManager.newLayer({name:"debug图层"});var b=this;this.yccInstance.ticker.addFrameListener(function(){b.updateInfo()})},a.Debugger.prototype.showDebugPanel=function(){this.init();var a=this.layer;a.uiList.indexOf(this.rect)===-1&&a.addUI(this.rect)},a.Debugger.prototype.updateInfo=function(){var a=this.yccInstance.layerList,b=a.indexOf(this.layer);b!==-1&&(b+1!==a.length&&(a.splice(b,1),a.push(this.layer)),this.rect.rect.height=20*this.fields.length,this.fields.forEach(function(a){a.ui.content=a.name+" "+a.cb()}))},a.Debugger.prototype.addField=function(b,c){var d=this.fields.length,e=new a.UI.SingleLineText({content:"usedJSHeapSize "+c(),fontSize:"12px",rect:new a.Math.Rect(0,20*d,100,20),color:"green"});this.fields.push({name:b,cb:c,ui:e}),this.rect.addChild(e)},a.Debugger.prototype.addToLayer=function(a){a.uiList.indexOf(this.rect)===-1&&a.addUI(this.rect)},a.Debugger.prototype.updateField=function(a,b){for(var c=0;c<this.fields.length;c++)if(this.fields[c].name===a)return this.fields[c].cb=null,void(this.fields[c].cb=b)},a.Debugger.Log=function(a){this.message="[Ycc logger]=> "+a},a.Debugger.Error=function(a){this.message="[Ycc  error]=> "+a}}(Ycc),function(a){function b(b,c){a.utils.isWx()&&b.indexOf("cloud://")!==-1?wx.cloud.downloadFile({fileID:b,success:function(a){c.call(this,a.tempFilePath)},fail:function(){c.call(this,b)}}):c.call(this,b)}function c(){this.currentTime=0,this.source=null,this.running=!1}a.Loader=function(b){this.yccClass=a.Loader,this.yccInstance=b,this.ajax=new a.Ajax,this.basePath=""},a.Loader.prototype.loadResParallel=function(b,c,d,e,f){function g(g,h,i){return function(){e.push(g),"undefined"!=typeof g.name&&(f[g.name]=g.res),a.utils.isFn(d)&&d(g,i,h),b.length===e.length&&c(e,f)}}e=e||[],f=f||{};for(var h=this,i=0;i<b.length;i++){var j=b[i],k="load",l="error";j.type=j.type||"image","image"===j.type&&(j.res=h._createImage(),j.res.setAttribute&&j.res.setAttribute("crossOrigin",j.crossOrigin||""),j.res.src=j.url),"audio"===j.type&&(k="loadedmetadata",j.res=new Audio,j.res.src=j.url,j.res.preload="load",j.res.crossOrigin=j.crossOrigin||""),j.res["on"+k]=g(j,i,!0),j.res["on"+l]=g(j,i,!1)}},a.Loader.prototype.loadResOneByOne=function(d,e,f,g,h){function i(){clearTimeout(p),"image"===m.type||"undefined"!=typeof wx&&"audio"===m.type,g.push(m),"undefined"!=typeof m.name&&(h[m.name]=m.res),a.utils.isFn(f)&&f(m,null,l),k.loadResOneByOne(d,e,f,g,h)}function j(b){console.log("loader:",m.name,"error"),clearTimeout(p),("image"===m.type||"undefined"!=typeof wx&&"audio"===m.type)&&(m.res.removeEventListener(n,i),m.res.removeEventListener(o,j)),g.push(m),"undefined"!=typeof m.name&&(h[m.name]=m.res),a.utils.isFn(f)&&f(m,b,l),k.loadResOneByOne(d,e,f,g,h)}if(g=g||[],h=h||{},d.length===g.length)return void e(g,h);var k=this,l=g.length,m=d[l],n="load",o="error";m.type=m.type||"image";var p=0;b(k.basePath+m.url,function(a){if("image"===m.type)m.res=k._createImage(),m.res.setAttribute&&m.res.setAttribute("crossOrigin",m.crossOrigin||""),m.res.src=a,m.res["on"+n]=i,m.res["on"+o]=j,p=setTimeout(function(){m.res["on"+n]=null,m.res["on"+o]=null,j({message:"获取资源超时！"})},m.timeout||1e4);else if("audio"===m.type){if("undefined"!=typeof wx)return m.res=new Audio,m.res.src=a,n="loadedmetadata",o="error",m.res.addEventListener(n,i),void m.res.addEventListener(o,j);if(m.res=new c,!m.res.context)return void j({message:"浏览器不支持AudioContext！"});console.log(a),k.ajax.get(a,function(a){return function(b){a.res.context.decodeAudioData(b,function(b){a.res.buf=b,i()},j)}}(m),j,"arraybuffer")}})},a.Loader.prototype.getResByName=function(a,b){for(var c=0;c<b.length;c++)if(b[c].name===a)return b[c];return null},a.Loader.prototype._createImage=function(){return this.yccInstance&&"wxapp"===this.yccInstance.config.appenv?this.yccInstance.canvasDom.createImage():new Image},c.prototype.context="undefined"!=typeof AudioContext&&new AudioContext||"undefined"!=typeof webkitAudioContext&&new webkitAudioContext,c.prototype.play=function(){var a=this.context;if(a){this.running=!0,this.source&&this.source.stop();var b=a.createBufferSource();b.buffer=this.buf,b.connect(a.destination),b.start(this.currentTime),this.source=b}},c.prototype.pause=function(){var a=this.context;a&&(this.running=!1,this.source.stop(),this.source=null)}}(Ycc),function(a){a.Ajax=function(){this.yccClass=a.Ajax},a.Ajax.prototype.get=function(a){var b,c,d=this,e="",f="json";1===arguments.length?(e="",b=a.successCb,c=a.errorCb,f="json"):(e=arguments[0],b=arguments[1],c=arguments[2],f=arguments[3]);var g=new XMLHttpRequest;g.open("GET",e,!0),g.responseType=f,g.onload=function(){b.call(d,g.response)},g.onerror=function(a){c.call(d,a)},g.send()}}(Ycc),function(a){a.Event=function(b){this.yccClass=a.Event,this.type=b?b:"",this.x=0,this.y=0,this.originEvent=null,this.stop=!1,this.target=null,a.utils.isObj(b)&&a.utils.extend(this,b)}}(Ycc),function(a){a.Listener=function(){this.yccClass=a.Listener,this.listeners={},this.stopType={},this.disableType={},this.stopAllEvent=!1,this.onclick=null,this.onmousedown=null,this.onmouseup=null,this.onmousemove=null,this.ondragstart=null,this.ondragging=null,this.ondragend=null,this.onmouseover=null,this.onmouseout=null,this.ontouchstart=null,this.ontouchmove=null,this.ontouchend=null,this.ontap=null,this.onzoom=null,this.onrotate=null,this.onmultistart=null,this.onmultichange=null,this.onmultiend=null},a.Listener.release=function(b){var c=null;b.yccClass=null;for(c in b.listeners)b.listeners.hasOwnProperty(c)&&(b.listeners[c].length=0,delete b.listeners[c]);a.utils.releaseObject(b.stopType),a.utils.releaseObject(b.disableType),b.stopAllEvent=!0,b.onclick=null,b.onmousedown=null,b.onmouseup=null,b.onmousemove=null,b.ondragstart=null,b.ondragging=null,b.ondragend=null,b.onmouseover=null,b.onmouseout=null,b.ontouchstart=null,b.ontouchmove=null,b.ontouchend=null,b.ontap=null},a.Listener.prototype.addListener=function(a,b){var c=this.listeners[a];c||(this.listeners[a]=[]),this.listeners[a].indexOf(b)===-1&&this.listeners[a].push(b)},a.Listener.prototype.stop=function(a){this.stopType[a]=!0},a.Listener.prototype.triggerListener=function(b,c){if(!this.stopAllEvent&&!this.disableType[b]){this.stopType[b]||a.utils.isFn(this["on"+b])&&this["on"+b].apply(this,Array.prototype.slice.call(arguments,1));var d=this.listeners&&this.listeners[b];if(d&&a.utils.isArray(d))for(var e=0;e<d.length;e++)this.stopType[b]||d[e].apply(this,Array.prototype.slice.call(arguments,1))}},a.Listener.prototype.removeListener=function(b,c){var d=this.listeners[b];if(d&&a.utils.isArray(d))for(var e=0;e<d.length;e++)if(d[e]===c)return void d.splice(e,1)},a.Listener.prototype.disableEvent=function(a){this.disableType[a]=!0},a.Listener.prototype.resumeEvent=function(a){this.disableType[a]=!1}}(Ycc),function(a){var b=function(){var a=0;return function(){this.id=a++,this.startTouchEvent=null,this.endTouchEvent=null,this.moveTouchEventList=[],this.startTime=Date.now(),this.endTime=0}}();a.TouchLifeTracer=function(b){a.Listener.call(this),this.target=b.target,this._lifeList=[],this.currentLifeList=[],this.targetTouches=[],this.touches=[],this.changedTouches=[],this.onlifestart=null,this.onlifechange=null,this.onlifeend=null,this.addLife=function(a){this._lifeList.push(a)},this.findCurrentLifeByTouchID=function(a){for(var b=0;b<this.currentLifeList.length;b++){var c=this.currentLifeList[b];if(c.startTouchEvent.identifier===a)return c}},this.deleteCurrentLifeByTouchID=function(a){for(var b=0;b<this.currentLifeList.length;b++){var c=this.currentLifeList[b];if(c.startTouchEvent.identifier===a)return this.currentLifeList.splice(b,1),!0}return!1},this.init=function(){return this.target.addEventListener?(this.target.addEventListener("touchstart",this.touchstart.bind(this)),this.target.addEventListener("touchmove",this.touchmove.bind(this)),void this.target.addEventListener("touchend",this.touchend.bind(this))):console.error("addEventListener undefined")},this.init()},a.TouchLifeTracer.prototype.touchstart=function(a){console.log("touchstart",a);var c=this;a.preventDefault&&a.preventDefault(),c.syncTouches(a);var d=new b;d.startTouchEvent=a.changedTouches[0],c.addLife(d),c.currentLifeList.push(d),c.triggerListener("lifestart",d)},a.TouchLifeTracer.prototype.touchmove=function(a){var b=this;a.preventDefault&&a.preventDefault(),b.syncTouches(a);for(var c=a.changedTouches,d=0;d<c.length;d++){var e=c[d],f=b.findCurrentLifeByTouchID(e.identifier),g=b.indexOfTouchFromMoveTouchEventList(f.moveTouchEventList,e);g===-1?f.moveTouchEventList.push(e):f.moveTouchEventList[g]=e,b.triggerListener("lifechange",f)}},a.TouchLifeTracer.prototype.touchend=function(a){var b=this;a.preventDefault&&a.preventDefault(),b.syncTouches(a);var c=a.changedTouches[0],d=b.findCurrentLifeByTouchID(c.identifier);d.endTouchEvent=c,d.endTime=Date.now(),b.deleteCurrentLifeByTouchID(c.identifier),b.triggerListener("lifeend",d)},a.utils.mergeObject(a.TouchLifeTracer.prototype,a.Listener.prototype),a.TouchLifeTracer.prototype.syncTouches=function(a){this.touches=[],this.changedTouches=[],this.targetTouches=[];var b=0,c=[];for(c=a.touches,b=0;b<c.length;b++)c[b].pageX=c[b].pageX||c[b].x,c[b].pageY=c[b].pageY||c[b].y,c[b].clientX=c[b].clientX||c[b].x,c[b].clientY=c[b].clientY||c[b].y,this.touches.push(c[b]);for(c=a.changedTouches,b=0;b<c.length;b++)c[b].pageX=c[b].pageX||c[b].x,c[b].pageY=c[b].pageY||c[b].y,c[b].clientX=c[b].clientX||c[b].x,c[b].clientY=c[b].clientY||c[b].y,this.changedTouches.push(c[b]);for(c=a.targetTouches||a.touches,b=0;b<c.length;b++)c[b].pageX=c[b].pageX||c[b].x,c[b].pageY=c[b].pageY||c[b].y,c[b].clientX=c[b].clientX||c[b].x,c[b].clientY=c[b].clientY||c[b].y,this.targetTouches.push(c[b])},a.TouchLifeTracer.prototype.indexOfTouchFromMoveTouchEventList=function(a,b){for(var c=0;c<a.length;c++)if(b.identifier===a[c].identifier)return c;return-1}}(Ycc),function(a){a.Gesture=function(b){a.Listener.call(this),this.yccClass=a.Gesture,b=b||{},this.option={target:null,useMulti:!0},a.utils.extend(this.option,b),this._longTapTimeout=null,this.ismutiltouching=!1,this.touchLifeTracer=null,this._init()},a.Gesture.prototype=new a.Listener,a.Gesture.prototype._init=function(){a.utils.isMobile()?(console.log("mobile gesture init..."),this._initForMobile()):(console.log("pc gesture init..."),this._initForPC())},a.Gesture.prototype._initForMobile=function(){var b=this,c=new a.TouchLifeTracer({target:this.option.target});this.touchLifeTracer=c;var d,e,f={tap:!1,swipe:!1};c.onlifestart=function(a){if(b.triggerListener("tap",b._createEventData(a.startTouchEvent,"tap")),b.triggerListener("log","tap triggered"),b.triggerListener("dragstart",b._createEventData(a.startTouchEvent,"dragstart")),c.currentLifeList.length>1){if(b.ismutiltouching=!0,!b.option.useMulti)return;return b.triggerListener("log","multi touch start ..."),b.triggerListener("multistart",c.currentLifeList),f.tap=!1,f.swipe=!1,clearTimeout(this._longTapTimeout),d=c.currentLifeList[0],e=c.currentLifeList[1],this}b.ismutiltouching=!1,f.tap=!1,f.swipe=!1,this._longTapTimeout=setTimeout(function(){b.triggerListener("longtap",b._createEventData(a.startTouchEvent,"longtap"))},750)},c.onlifechange=function(g){if(g.moveTouchEventList.forEach(function(a){b.triggerListener("dragging",b._createEventData(a,"dragging"))}),c.currentLifeList.length>1){if(b.ismutiltouching=!0,!b.option.useMulti)return;f.tap=!0,f.swipe=!0,b.triggerListener("log","multi touch move ..."),b.triggerListener("multichange",d,e);var h=b.getZoomRateAndRotateAngle(d,e);if(a.utils.isNum(h.rate)){var i=b._createEventData(d.startTouchEvent,"zoom");i.zoomRate=h.rate,b.triggerListener("zoom",b._createEventData(i,"zoom")),b.triggerListener("log","zoom triggered",h.rate)}if(a.utils.isNum(h.angle)){var i=b._createEventData(d.startTouchEvent,"rotate");i.angle=h.angle,b.triggerListener("rotate",b._createEventData(i,"rotate")),b.triggerListener("log","rotate triggered",h.angle)}return this}if(g.moveTouchEventList.length>0){b.ismutiltouching=!1;var j=g.startTouchEvent,k=Array.prototype.slice.call(g.moveTouchEventList,-1)[0];(Math.abs(k.pageX-j.pageX)>10||Math.abs(k.pageY-j.pageY)>10)&&(f.tap=!0,clearTimeout(this._longTapTimeout))}},c.onlifeend=function(a){if(b.triggerListener("dragend",b._createEventData(a.endTouchEvent,"dragend")),b.ismutiltouching=!0,1===c.currentLifeList.length)return b.ismutiltouching=!1,b.triggerListener("multiend",d,e);if(0===c.currentLifeList.length){if(b.ismutiltouching=!1,!f.tap&&a.endTime-a.startTime<300)return clearTimeout(this._longTapTimeout),d&&a.endTime-d.endTime<300&&Math.abs(d.endTouchEvent.pageX-a.endTouchEvent.pageX)<10&&Math.abs(d.endTouchEvent.pageY-a.endTouchEvent.pageY)<10?(b.triggerListener("doubletap",b._createEventData(a.endTouchEvent,"doubletap")),b.triggerListener("log","doubletap triggered"),d=null,this):(d=a,this);if(!f.swipe&&a.endTime-a.startTime<300){var g=a.startTouchEvent,h=Array.prototype.slice.call(a.moveTouchEventList,-1)[0];if(Math.abs(h.pageX-g.pageX)>30||Math.abs(h.pageY-g.pageY)>30){var i=b._getSwipeDirection(g.pageX,g.pageY,h.pageX,h.pageY),j="swipe"+i;b.triggerListener("log",j),a.endTouchEvent.swipeDirection=i,b.triggerListener(j,b._createEventData(a.endTouchEvent,j)),b.triggerListener("swipe",b._createEventData(a.endTouchEvent,"swipe")),console.log("swipe",j)}return this}}}},a.Gesture.prototype._initForPC=function(){var a=this,b=null,c=null,d=!1,e=null,f=-1,g=0;this.option.target.addEventListener("mousedown",function(c){c.identifier=++g,b=a._createEventData(c),f=setTimeout(function(){console.log("longtap",Date.now(),"..."),a.triggerListener("log","long tap ..."),a.triggerListener("longtap",a._createEventData(b,"longtap"))},750)}),this.option.target.addEventListener("mousemove",function(e){if(a.triggerListener("mousemove",a._createEventData(e,"mousemove")),b){if(b&&e.clientX===b.clientX&&e.clientY===b.clientY)return;if(c&&e.clientX===b.clientX&&e.clientY===b.clientY)return;clearTimeout(f),d||(a.triggerListener("dragstart",a._createEventData(b,"dragstart")),\\nd=!0),e.identifier=g,a.triggerListener("dragging",a._createEventData(e,"dragging"))}else clearTimeout(f)}),this.option.target.addEventListener("mouseup",function(h){if(h.identifier=g,c=a._createEventData(h),d){if(clearTimeout(f),a.triggerListener("dragend",a._createEventData(h,"dragend")),d&&c.createTime-b.createTime<300&&(Math.abs(c.pageX-b.pageX)>30||Math.abs(c.pageY-b.pageY)>30)){var i=a._getSwipeDirection(b.pageX,b.pageY,c.pageX,c.pageY),j="swipe"+i;a.triggerListener("log",j),b.swipeDirection=i,a.triggerListener(j,a._createEventData(b,j)),a.triggerListener("swipe",a._createEventData(b,"swipe")),console.log("swipe",j)}return d=!1,b=null,null}if(!d&&b&&c.createTime-b.createTime<300){clearTimeout(f);var k=a._createEventData(b,"tap");return a.triggerListener("tap",k),a.triggerListener("log","tap triggered"),e&&k.createTime-e.createTime<300&&Math.abs(e.pageX-k.pageX)<10&&Math.abs(e.pageY-k.pageY)<10?(a.triggerListener("doubletap",a._createEventData(k,"doubletap")),a.triggerListener("log","doubletap triggered"),e=null,this):(e=k,b=null,this)}})},a.Gesture.prototype._createEventData=function(b,c){var d={type:"",target:null,identifier:-1,x:0,y:0,clientX:0,clientY:0,pageX:0,pageY:0,screenX:0,screenY:0,force:1,swipeDirection:"",zoomRate:1,angle:0,createTime:Date.now()};return d=a.utils.extend(d,b),d.type=c,d},a.Gesture.prototype._getSwipeDirection=function(a,b,c,d){return Math.abs(a-c)>=Math.abs(b-d)?a-c>0?"left":"right":b-d>0?"up":"down"},a.Gesture.prototype.getZoomRateAndRotateAngle=function(b,c){this.triggerListener("log","preLife"),this.triggerListener("log",b),this.triggerListener("log","curLife"),this.triggerListener("log",c);var d=b.startTouchEvent.pageX,e=b.startTouchEvent.pageY,f=c.startTouchEvent.pageX,g=c.startTouchEvent.pageY,h=b.moveTouchEventList.length>0?b.moveTouchEventList[b.moveTouchEventList.length-1]:b.startTouchEvent,i=c.moveTouchEventList.length>0?c.moveTouchEventList[c.moveTouchEventList.length-1]:c.startTouchEvent,j=h.pageX,k=h.pageY,l=i.pageX,m=i.pageY,n=new a.Math.Vector(f-d,g-e),o=new a.Math.Vector(l-j,m-k),p=Math.acos(o.dot(n)/(o.getLength()*n.getLength()))/Math.PI*180;return{rate:o.getLength()/n.getLength(),angle:p*(o.cross(n).z>0?-1:1)}},a.Gesture.prototype.enableMutiTouch=function(a){this.option.useMulti=!1}}(Ycc),function(a){var b=0;a.Layer=function(c,d){a.Listener.call(this),d=d||{},this.yccClass=a.Layer,this.uiList=[],this.uiCountRecursion=0,this.uiCountRendered=0,this.yccInstance=c,this.ctx=null,this.useCache=!1,this.ctxCache=null,this.ctxCacheRect=null,this.renderCacheRect=!1,this.id=b++,this.type="ui",this.textValue="",this.name=d.name?d.name:"图层_"+this.type+"_"+this.id,this.x=0,this.y=0,this.width=c.getStageWidth(),this.height=c.getStageHeight(),this.show=!0,this.ghost=!1,this.enableEventManager=!1,this.enableFrameEvent=!1,this.onFrameComing=function(){},a.utils.extend(this,d),this.init()},a.Layer.prototype=new a.Listener,a.Layer.prototype.constructor=a.Layer,a.Layer.release=function(b){a.Listener.release(b),b.yccClass=null,b.uiList=null,b.yccInstance=null,b.show=!1,b.enableEventManager=!1,b.enableFrameEvent=!1,b.onFrameComing=null},a.Layer.prototype.init=function(){var a=this;this.ctx=this.yccInstance.ctx,this.ctxCache=this.useCache?this.yccInstance.createCacheCtx({width:this.width*this.yccInstance.dpi,height:this.height*this.yccInstance.dpi}):this.ctx,a._setCtxProps()},a.Layer.prototype._initEvent=function(){function b(b){if(!b.stop&&!(e&&b.x===e.x&&b.y===e.y||f&&b.x===f.x&&b.y===f.y)){if(g=!0,e){if(!h){var c=new a.Event({type:"dragstart",x:e.x,y:e.y,mouseDownYccEvent:e});d.triggerListener(c.type,c),e.target&&(c.target=e.target,c.target.triggerListener(c.type,c))}h=!0;var i=new a.Event({type:"dragging",x:b.x,y:b.y,mouseDownYccEvent:e});return d.triggerListener(i.type,i),e.target&&(i.target=e.target,i.target.triggerListener(i.type,i)),null}for(var j=d.uiList.length-1;j>=0;j--){var k=d.uiList[j],l=new a.Math.Dot(b.x-k.belongTo.x,b.y-k.belongTo.y);if(l.isInRect(k.rect)){b.stop=!0,b.mouseDownYccEvent=e,b.mouseUpYccEvent=f,b.target=k,k.triggerListener(b.type,b);break}}}}function c(b){if(!b.stop)for(var c=d.uiList.length-1;c>=0;c--){var g=d.uiList[c],h=new a.Math.Dot(b.x,b.y);if(g.rect&&h.isInRect(g.getAbsolutePosition())&&b.stop===!1){b.stop=!0,b.mouseDownYccEvent=e,b.mouseUpYccEvent=f,b.target=g,b.targetDeltaPosition=new a.Math.Dot(b.x-g.getAbsolutePosition().x,b.y-g.getAbsolutePosition().y),g.triggerListener(b.type,b);break}}}var d=this,e=null,f=null,g=!1,h=!1;this.addListener("click",function(a){g||c(a)}),this.addListener("mousedown",function(a){g=!1,h=!1,e=a,c(a)}),this.addListener("mouseup",function(b){if(h){var g=new a.Event({type:"dragend",x:b.x,y:b.y,mouseDownYccEvent:e});d.triggerListener("dragend",g),e&&e.target&&(d.target=e.target,d.target.triggerListener("dragend",g))}b.mouseDownYccEvent=e=null,f=b,c(b)}),this.addListener("mousemove",b)},a.Layer.prototype._setCtxProps=function(b,c){var d=this;c=c||d.ctx;var e={fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",fontSize:"16px",fontFamily:"微软雅黑",font:"16px 微软雅黑",textBaseline:"hanging",fillStyle:"red",strokeStyle:"blue"};e=a.utils.extend(e,b),e.fontSize=parseInt(e.fontSize)*this.yccInstance.getSystemInfo().devicePixelRatio+"px",e.font=[e.fontStyle,e.fontVariant,e.fontWeight,e.fontSize,e.fontFamily].join(" ");for(var f in e)e.hasOwnProperty(f)&&(c[f]=e[f])},a.Layer.prototype.clear=function(){this.ctx.clearRect(0,0,this.width,this.height)},a.Layer.prototype.removeAllUI=function(){this.uiList.forEach(function(b){a.UI.release(b)}),this.uiList.length=0,this.updateCache()},a.Layer.prototype.removeSelf=function(){this.removeAllUI(),this.yccInstance.layerManager.deleteLayer(this),a.Layer.release(this)},a.Layer.prototype.renderToStage=function(){this.show&&this.yccInstance.ctx.drawImage(this.ctx.canvas,0,0,this.width,this.height)},a.Layer.prototype.addUI=function(a,b){var c=this;a.itor().each(function(a){a.init(c)});var d=this.uiList.indexOf(b);return b&&d!==-1?(this.uiList.splice(d,0,a),a._onAdded&&a._onAdded(),this.updateCache(),a):(this.uiList.push(a),a._onAdded&&a._onAdded(),a)},a.Layer.prototype.removeUI=function(b){if(!b)return!1;var c=this.uiList.indexOf(b);return c!==-1&&(a.UI.release(b),this.uiList[c]=null,this.uiList.splice(c,1),this.updateCache(),!0)},a.Layer.prototype.render=function(a){this.reRender(a)},a.Layer.prototype.reRender=function(a){if(this.show)return this.useCache?this.renderCacheToStage(a):void this.renderAllToCtx(this.ctx)},a.Layer.prototype.renderCacheToStage=function(a){if(this.useCache){a&&this.updateCache();var b=this.yccInstance.dpi;if(this.ctxCacheRect){var c=this.ctxCacheRect.x*b,d=this.ctxCacheRect.y*b,e=this.ctxCacheRect.width*b,f=this.ctxCacheRect.height*b;this.ctx.drawImage(this.ctxCache.canvas,c,d,e,f,c,d,e,f)}else this.ctx.drawImage(this.ctxCache.canvas,0,0);this.ctx.draw&&this.ctx.draw()}},a.Layer.prototype.getUIFromPointer=function(b,c){c=!a.utils.isBoolean(c)||c;for(var d=this,e=null,f=0,g=0;g<this.uiList.length;g++){var h=d.uiList[g];c&&!h.show||this.uiList[g].itor().depthDown(function(a,d){return a.ghost?-1:c&&!a.show?-1:void(a.containDot(b)&&d>=f&&(e=a,f=d))})}return e},a.Layer.prototype.getUIListFromPointer=function(a){for(var b=[],c=0;c<this.uiList.length;c++)this.uiList[c].itor().depthDown(function(c,d){c.containDot(a)&&b.push(c)});return b},a.Layer.prototype.transformToAbsolute=function(b){var c=null;if(a.utils.isArray(b)){c=[];for(var d=0;d<b.length;d++){var e=new a.Math.Dot(0,0),f=b[d];e.x=this.x+f.x,e.y=this.y+f.y,c.push(e)}return c}return c=new a.Math.Dot(0,0),c.x=this.x+b.x,c.y=this.y+b.y,c},a.Layer.prototype.transformToLocal=function(b){var c=null;if(a.utils.isArray(b)){c=[];for(var d=0;d<b.length;d++){var e=new a.Math.Dot(0,0),f=b[d];e.x=f.x-this.x,e.y=f.y-this.y,c.push(e)}return c}return c=new a.Math.Dot(0,0),c.x=b.x-this.x,c.y=b.y-this.y,c},a.Layer.prototype.renderAllToCtx=function(a){var b=this;b.uiCountRecursion=0,b.uiCountRendered=0;for(var c=0;c<this.uiList.length;c++)this.uiList[c].show&&(this.uiList[c].itor().depthDown(function(a,c){if(b.uiCountRecursion++,!a.show)return-1;var d=a.__render();b.useCache&&b._mergeCtxCacheRect(a.getAbsolutePositionRect()),d||b.uiCountRendered++}),this.uiList[c]._onChildrenRendered&&this.uiList[c]._onChildrenRendered());var d=this.ctxCacheRect;if(this.useCache&&d&&this.renderCacheRect){var e=this.yccInstance.dpi,f=this.yccInstance.getStageWidth()/e,g=this.yccInstance.getStageHeight()/e,h=d.x<0?0:d.x,i=d.y<0?0:d.y,j=d.width>f?f:d.width,k=d.height>g?g:d.height;a.save(),a.beginPath(),a.strokeStyle="red",a.strokeWidth=2,a.rect(h*e,i*e,j*e,k*e),a.closePath(),a.stroke(),a.restore()}a.draw&&a.draw()},a.Layer.prototype._mergeCtxCacheRect=function(b){var c=this.yccInstance;if(!this.ctxCacheRect)return this.ctxCacheRect=new a.Math.Rect(b);var d=c.getStageWidth(),e=c.getStageHeight(),f=c.dpi,g=this.ctxCacheRect,h=g.x+g.width,i=g.y+g.height,j=b.x+b.width,k=b.y+b.height;return g.x=g.x<b.x?g.x:b.x,g.y=g.y<b.y?g.y:b.y,g.width=h<j?j-g.x:h-g.x,g.height=i<k?k-g.y:i-g.y,g.x=g.x<0?0:g.x,g.y=g.y<0?0:g.y,g.width=g.x+g.width>d/f?d/f-g.x:g.width,g.height=g.y+g.height>e/f?e/f-g.y:g.height,g},a.Layer.prototype.updateCache=function(){this.useCache&&(this.clearCache(),this.renderAllToCtx(this.ctxCache))},a.Layer.prototype.clearCache=function(){var a=this.ctxCache.canvas.width;this.ctxCache.canvas.width=a,this.ctxCacheRect=null}}(Ycc),function(a){a.LayerManager=function(a){this.yccInstance=a,this.renderTime=0,this.maxRenderTime=0,this.renderUiCount=0},a.LayerManager.prototype.init=function(){},a.LayerManager.prototype.newLayer=function(b){var c=new a.Layer(this.yccInstance,b);return this.yccInstance.layerList.push(c),c},a.LayerManager.prototype.deleteLayer=function(a){for(var b=this.yccInstance.layerList,c=0;c<b.length;c++)if(b[c].id===a.id)return this.yccInstance.layerList.splice(c,1),a;return a},a.LayerManager.prototype.deleteAllLayer=function(){for(var b=0;b<this.yccInstance.layerList.length;b++){var c=this.yccInstance.layerList[b];c.removeAllUI(),a.Layer.release(c),c=null}this.yccInstance.layerList=[]},a.LayerManager.prototype.reRenderAllLayerToStage=function(a){var b=this.yccInstance;if(b.ticker.currentFrame&&b.ticker.currentFrame.isRendered)return console.log("stop overdraw!");var c=Date.now();this.renderUiCount=0,this.yccInstance.clearStage();for(var d=0;d<this.yccInstance.layerList.length;d++){var e=this.yccInstance.layerList[d];e.show&&(e.reRender(a),this.renderUiCount+=e.uiCountRendered)}this.renderTime=Date.now()-c,this.maxRenderTime=this.renderTime>this.maxRenderTime?this.renderTime:this.maxRenderTime,b.ticker.currentFrame&&(b.ticker.currentFrame.isRendered=!0)},a.LayerManager.prototype.enableEventManagerOnly=function(a){if(!a)return!1;for(var b=0;b<this.yccInstance.layerList.length;b++)this.yccInstance.layerList[b].enableEventManager=!1;return a.enableEventManager=!0,this},a.LayerManager.prototype.enableEventManagerAll=function(a){for(var b=0;b<this.yccInstance.layerList.length;b++)this.yccInstance.layerList[b].enableEventManager=a;return this},a.LayerManager.prototype.renderAllLayerByJsonArray=function(b){if(!a.utils.isArray(b))return console.error("jsonArray is not an Array!",b);for(var c=this,d=0;d<b.length;d++){var e=b[d];if(!a.utils.isObj(e))return console.error("item in jsonArray should be an Object!",e);for(var f=c.newLayer(e.option),g=0;g<e.ui.length;g++){var h=e.ui[g];f.addUI(new a.UI[h.type](h.option))}f.render()}}}(Ycc),function(a){var b=function(a){this.imageData=a,this.createTime=new Date,this.id=this.createTime.getTime()};a.PhotoManager=function(a){this.yccInstance=a,this.ctx=a.ctx,this._photos=[]},a.PhotoManager.prototype.takePhoto=function(){return this._photos.push(new b(this.ctx.getImageData(0,0,this.yccInstance.getStageWidth(),this.yccInstance.getStageHeight()))),this},a.PhotoManager.prototype.getHistoryPhotos=function(){return this._photos},a.PhotoManager.prototype.showPhoto=function(a){return this.ctx.putImageData(a.imageData,0,0),a},a.PhotoManager.prototype.showLastPhoto=function(){var a=this._photos.length,b=!1;return a>=1&&(b=this._photos[a-1],this.showPhoto(b)),b},a.PhotoManager.prototype.delPhotoById=function(a){for(var b=this._photos.slice(0),c=0;c<b.length;c++)if(b[c].id===a)return b.splice(c+1,1),this._photos=b,b[c];return!1}}(Ycc),function(a){if(!a||!a.utils)return console.error("Error: Ycc.ui needs module `Ycc` and `Ycc.utils`!");a.utils.isObj,a.utils.isArray,a.utils.isString,a.utils.isNum,a.utils.extend;a.UI=function(b){this.yccClass=a.UI,this._photos=[],this.ctx=b.ctx,this.ctxWidth=b.getStageWidth(),this.ctxHeight=b.getStageHeight()},a.UI.prototype.text=function(a,b,c){return this.ctx.save(),c?this.ctx.fillText(b,a[0],a[1]):this.ctx.strokeText(b,a[0],a[1]),this.ctx.restore(),this},a.UI.prototype.line=function(a,b){return this.ctx.save(),this.ctx.beginPath(),this.ctx.moveTo(a[0],a[1]),this.ctx.lineTo(b[0],b[1]),this.ctx.stroke(),this.ctx.closePath(),this.ctx.restore(),this},a.UI.prototype.rect=function(a,b,c){return this.ctx.save(),this.ctx.beginPath(),this.ctx.rect(a[0],a[1],b[0]-a[0],b[1]-a[1]),this.ctx.closePath(),c?this.ctx.fill():this.ctx.stroke(),this.ctx.restore(),this},a.UI.prototype.ellipse=function(a,b,c,d,e){this.ctx.save();var f=b>c?b:c,g=b/f,h=c/f;return this.ctx.translate(a[0],a[1]),this.ctx.rotate(parseInt(d)*Math.PI/180),this.ctx.translate(-a[0],-a[1]),this.ctx.scale(g,h),this.ctx.beginPath(),this.ctx.arc(a[0]/g,a[1]/h,f,0,2*Math.PI,!1),this.ctx.closePath(),e?this.ctx.fill():this.ctx.stroke(),this.ctx.restore(),this},a.UI.prototype.circleArc=function(a,b,c,d,e){return this.ctx.save(),this.ctx.beginPath(),this.ctx.arc(a[0],a[1],b,c/180*Math.PI,d/180*Math.PI,e),this.ctx.stroke(),this.ctx.closePath(),this.ctx.restore(),this},a.UI.prototype.sector=function(a,b,c,d,e,f){return this.ctx.save(),this.ctx.beginPath(),this.ctx.lineTo(a[0],a[1]),this.ctx.arc(a[0],a[1],b,c*Math.PI/180,d*Math.PI/180,f),this.ctx.lineTo(a[0],a[1]),this.ctx.closePath(),e?this.ctx.fill():this.ctx.stroke(),this.ctx.restore(),this},a.UI.prototype.foldLine=function(a){if(a.length<2)return console.error("Error: 参数错误！");this.ctx.save(),this.ctx.beginPath(),this.ctx.moveTo(a[0][0],a[0][1]);for(var b=0;b<a.length;b++)this.ctx.lineTo(a[b][0],a[b][1]);return this.ctx.stroke(),this.ctx.restore(),this},a.UI.prototype.circle=function(a,b,c){return this.ellipse(a,b,b,0,c),this},a.UI.prototype.image=function(a,b){var c=this;return b=b||[0,0],c.ctx.save(),c.ctx.beginPath(),c.ctx.drawImage(a,b[0],b[1]),c.ctx.closePath(),c.ctx.restore(),this},a.UI.prototype._getMaxLenContent=function(a,b){var c=a,d=0;if(this.ctx.measureText(a).width<=b)return a;for(var e=0;e<a.length;e++)if(c=a.slice(0,e),d=this.ctx.measureText(c).width,d>b)return a.slice(0,e-1)},a.UI.prototype.scale=function(a,b){return this.ctx.scale(a,b),this},a.UI.prototype.clear=function(){var a={fillStyle:"#fff"};return this.ctx.fillStyle=a.fillStyle,this.ctx.save(),this.ctx.beginPath(),this.ctx.rect(0,0,this.ctxWidth,this.ctxHeight),this.ctx.fill(),this.ctx.closePath(),this.ctx.restore(),this}}(Ycc),function(a){var b=0,c=1;a.UI.Base=function(c){a.Listener.call(this),a.Tree.call(this),this.yccClass=a.UI.Base,this.id=b++,this.name="",this.ctx=null,this.ctxCache=null,this.dpi=1,this.rect=new a.Math.Rect,this.x=0,this.y=0,this.anchorX=0,this.anchorY=0,this.rotation=0,this.rectBgColor="rgba(0,0,0,0)",this.rectBorderWidth=0,this.rectBorderColor="#000",this.show=!0,this.ghost=!1,this.stopEventBubbleUp=!0,this.opacity=1,this.lineWidth=1,this.fillStyle="black",this.strokeStyle="black",this.belongTo=null,this.userData=null,this.isShowRotateBeforeUI=!1,this.baseUI=null,this._beforeInit=null,this._afterInit=null,this._onAdded=null,this._onChildrenRendered=null,this.oncomputestart=null,this.oncomputeend=null,this.onrenderstart=null,this.onrenderend=null,this.extend(c)},a.utils.mergeObject(a.UI.Base.prototype,a.Listener.prototype),a.utils.mergeObject(a.UI.Base.prototype,a.Tree.prototype),a.UI.Base.prototype.init=function(b){a.utils.isFn(this._beforeInit)&&this._beforeInit(),this.belongTo=b,this.ctx=b.ctx,this.ctxCache=this.belongTo.ctxCache,this.dpi=this.belongTo.yccInstance.getSystemInfo().devicePixelRatio,a.utils.isFn(this._afterInit)&&this._afterInit()},a.UI.Base.prototype.computeUIProps=function(){},a.UI.Base.prototype.renderRectBgColor=function(){var b=this.getAbsolutePositionPolygon();if(!b||0===b.length)return console.log(new a.Debugger.Log("no polygon coordirates!").message);var c=this.ctxCache;c.save(),c.fillStyle=this.rectBgColor,c.beginPath(),c.moveTo(b[0].x*this.dpi,b[0].y*this.dpi);for(var d=1;d<b.length-1;d++)c.lineTo(b[d].x*this.dpi,b[d].y*this.dpi);c.closePath(),c.fill(),c.restore()},a.UI.Base.prototype.renderRectBorder=function(){if(!(this.rectBorderWidth<=0)){var b=this.getAbsolutePositionPolygon();if(!b||0===b.length)return console.log(new a.Debugger.Log("no polygon coordirates!").message);var c=this.ctxCache;c.save(),c.setLineDash&&c.setLineDash([0]),c.strokeStyle=this.rectBorderColor,c.lineWidth=this.rectBorderWidth,c.beginPath(),c.moveTo(b[0].x*this.dpi,b[0].y*this.dpi);for(var d=1;d<b.length-1;d++)c.lineTo(b[d].x*this.dpi,b[d].y*this.dpi);c.closePath(),c.stroke(),c.restore()}},a.UI.Base.prototype.renderDashBeforeUI=function(a){},a.UI.Base.prototype.removeSelf=function(){this.belongTo.removeUI(this)},a.UI.Base.prototype.addChild=function(a){return this.belongTo&&a.init(this.belongTo),this.addChildTree(a),a},a.UI.Base.prototype.removeChild=function(b){return this.removeChildTree(b),a.UI.release(b),this},a.UI.Base.prototype.scaleAndRotate=function(){var a=this.getAbsolutePositionRect();this.ctx.translate(this.anchorX+a.x,this.anchorY+a.y),this.ctx.rotate(this.rotation*Math.PI/180),this.ctx.translate(-this.anchorX-a.x,-this.anchorY-a.y)},a.UI.Base.prototype.isOutOfStage=function(){var a=this.belongTo.yccInstance.getStageWidth(),b=this.belongTo.yccInstance.getStageHeight(),c=this.getAbsolutePositionRect();return c.x>a||c.x+c.width<0||c.y>b||c.y+c.height<0},a.UI.Base.prototype.isOutOfRect=function(a){var b=a.x,c=a.y,d=a.width,e=a.height,f=this.getAbsolutePositionRect();return f.x>d||f.x+f.width<b||f.y>e||f.y+f.height<c},a.UI.release=function(b){b.itor().leftChildFirst(function(b){b.yccClass!==a.UI.Image&&b.yccClass!==a.UI.ImageFrameAnimation||(b.res=null),a.Tree.release(b),a.Listener.release(b),b.yccInstance=null,b.yccClass=null,b.ctx=null,b.belongTo=null,b.userData=null,b.baseUI=null,b._beforeInit=null,b._afterInit=null,b.oncomputestart=null,b.oncomputeend=null,b.onrenderstart=null,b.onrenderend=null})},a.UI.Base.prototype.render=function(){},a.UI.Base.prototype._renderContainer=function(a){var b=a,c=this.ctxCache;c.save(),c.beginPath(),c.strokeStyle="#ff0000",c.rect(b.x*this.dpi,b.y*this.dpi,b.width*this.dpi,b.height*this.dpi),c.closePath(),c.stroke(),c.restore(),b=null},a.UI.Base.prototype.__render=function(){this.triggerListener("computestart",new a.Event("computestart"));var b=this.computeUIProps();if(this.triggerListener("computeend",new a.Event("computeend")),b)return b;if(!this.belongTo.useCache&&this.isOutOfStage())return{message:"UI超出舞台！"};if(this.belongTo.useCache&&this.isOutOfRect(new a.Math.Rect(0,0,this.ctxCache.canvas.width*this.dpi,this.ctxCache.canvas.height*this.dpi)))return{message:"UI超出离屏Canvas！"};this._processBeforeRender();var c=this.getAbsolutePositionRect();this.renderRectBgColor(c),this.renderRectBorder(c),this.renderDashBeforeUI(this.ctxCache),this.belongTo.yccInstance.config.debugDrawContainer&&this._renderContainer(c),this.render(),this._processAfterRender()},a.UI.Base.prototype._processBeforeRender=function(){this.triggerListener("renderstart",new a.Event("renderstart")),c=this.ctx.globalAlpha,this.ctx.globalAlpha=this.opacity},a.UI.Base.prototype._processAfterRender=function(){this.ctx.globalAlpha=c,this.triggerListener("renderend",new a.Event("renderend"))},a.UI.Base.prototype.getMaxContentInWidth=function(a,b){var c=a,d=0,e=this.ctxCache;if(e.measureText(a).width<=b)return a;for(var f=0;f<a.length;f++)if(c=a.slice(0,f+1),d=e.measureText(c).width,d>b)return a.slice(0,f)},a.UI.Base.prototype.extend=function(a){a=a||{};for(var b in this)"undefined"!=typeof a[b]&&(this[b]=a[b]);return this},a.UI.Base.prototype.clone=function(){var a=new this.yccClass;return a.extend(this),a},a.UI.Base.prototype.getAbsolutePositionPolygon=function(){},a.UI.Base.prototype.getAbsolutePositionRect=function(){var b=this.getAbsolutePosition();return new a.Math.Rect(b.x,b.y,this.rect.width,this.rect.height)},a.UI.Base.prototype.getAbsolutePosition=function(){var b=new a.Math.Rect,c=this.getParent();if(b.width=this.rect.width,b.height=this.rect.height,c){var d=c.getAbsolutePosition();b.x=this.rect.x+d.x,b.y=this.rect.y+d.y}else b.x=this.rect.x+this.belongTo.x,b.y=this.rect.y+this.belongTo.y;return b},a.UI.Base.prototype.transformToAbsolute=function(b){var c=this;if(a.utils.isArray(b))return b.map(function(a){return c.transformToAbsolute(a)});var d=this.getParent();if(d){var e=d.getAbsolutePosition();return new a.Math.Dot(b.x+e.x,b.y+e.y)}return new a.Math.Dot(b.x+this.belongTo.x,b.y+this.belongTo.y)},a.UI.Base.prototype.transformToLocal=function(b){var c=null,d=this.getAbsolutePosition();if(a.utils.isArray(b)){c=[];for(var e=0;e<b.length;e++){var f=new a.Math.Dot(0,0),g=b[e];f.x=g.x-d.x+this.x,f.y=g.y-d.y+this.y,c.push(f)}return c}return c=new a.Math.Dot(0,0),c.x=b.x-d.x+this.x,c.y=b.y-d.y+this.y,c},a.UI.Base.prototype.containDot=function(a){return a.isInRect(this.getAbsolutePosition())},a.UI.Base.prototype.getDeepLevel=function(){return this.getParentList().length+1},a.UI.Base.prototype.transformByRotate=function(b){var c=this;if(a.utils.isArray(b))return b.map(function(a){return c.transformByRotate(a)});var d=new a.Math.Dot,e=(this.getAbsolutePosition(),b.x),f=b.y,g=(e-this.anchorX)*Math.cos(this.rotation/180*Math.PI)-(f-this.anchorY)*Math.sin(this.rotation/180*Math.PI)+this.anchorX,h=(f-this.anchorY)*Math.cos(this.rotation/180*Math.PI)+(e-this.anchorX)*Math.sin(this.rotation/180*Math.PI)+this.anchorY;return d=this.transformToAbsolute({x:g,y:h})},a.UI.Base.prototype._setCtxProps=function(b,c){var d=this;c=c||d.ctxCache;var e={fontStyle:"normal",fontVariant:"normal",fontWeight:"normal",fontSize:"16px",fontFamily:"微软雅黑",font:"16px 微软雅黑",textBaseline:"hanging",fillStyle:"red",strokeStyle:"blue"};e=a.utils.extend(e,b),e.fontSize=parseInt(e.fontSize)*this.dpi+"px",e.font=[e.fontStyle,e.fontVariant,e.fontWeight,e.fontSize,e.fontFamily].join(" ");for(var f in e)e.hasOwnProperty(f)&&(c[f]=e[f])},a.UI.Base.prototype.triggerUIEventBubbleUp=function(b,c,d,e){var f=this,g=[];if(f&&f.belongTo&&f.belongTo.enableEventManager){if(f.triggerListener(b,new a.Event({x:c,y:d,type:b,target:f,originEvent:e})),f.stopEventBubbleUp)return;for(var h=f.getParentList().reverse(),i=0;i<h.length;i++){var j=h[i];if(j.triggerListener(b,new a.Event({x:c,y:d,type:b,target:j,originEvent:e})),g.push(j),j.stopEventBubbleUp)break}}return g}}(Ycc),function(a){a.UI.Polygon=function(b){b=b||{},a.UI.Base.call(this,b),this.yccClass=a.UI.Polygon,this.x=0,this.y=0,this.fill=!0,this.fillStyle="blue",this.noneZeroMode=1,this.isDrawIndex=!1,this.coordinates=b.coordinates||[],this.extend(b)},a.utils.mergeObject(a.UI.Polygon.prototype,a.UI.Base.prototype),a.UI.Polygon.prototype.constructor=a.UI.Polygon,a.UI.Polygon.prototype.computeUIProps=function(){this.coordinates[0]&&(this.x=this.coordinates[0].x,this.y=this.coordinates[0].y)},a.UI.Polygon.prototype.render=function(a){var b=this;return a=a||b.ctxCache,b.ctx?(a.save(),a.fillStyle=this.fillStyle,a.strokeStyle=this.strokeStyle,this.renderPath(a),this.fill?a.fill():a.stroke(),void a.restore()):void console.error("[Ycc error]:","ctx is null !")},a.UI.Polygon.prototype.renderPath=function(){if(0!==this.coordinates.length){var a=this.ctxCache,b=this.transformByRotate(this.coordinates[0]);a.beginPath(),a.moveTo(b.x*this.dpi,b.y*this.dpi);for(var c=0;c<this.coordinates.length-1;c++){var d=this.transformByRotate(this.coordinates[c]);this.isDrawIndex&&a.fillText(c+"",d.x-10,d.y+10),a.lineTo(d.x*this.dpi,d.y*this.dpi)}a.closePath()}},a.UI.Polygon.prototype.getAbsolutePositionPolygon=function(){var a=this;return this.coordinates.map(function(b){return a.transformByRotate(b)})},a.UI.Polygon.prototype.getAbsolutePosition=function(b){b=b||new a.Math.Dot(this.x,this.y);var c=this.getParent();if(c){var d=c.getAbsolutePosition();b.x+=d.x,b.y+=d.y}else b.x=this.x+this.belongTo.x,b.y=this.y+this.belongTo.y;return b},a.UI.Polygon.prototype.getAbsolutePositionRect=function(){if(!this.coordinates[0])return console.log(new a.Debugger.Error("need compute prop coordinates").message);for(var b=this.coordinates[0],c=b.x,d=b.y,e=b.x,f=b.y,g=0;g<this.coordinates.length-1;g++){var h=this.coordinates[g];h.x<c&&(c=h.x),h.x>=e&&(e=h.x),h.y<d&&(d=h.y),h.y>=f&&(f=h.y)}var i=this.transformToAbsolute({x:c,y:d});return new a.Math.Rect(i.x,i.y,e-c,f-d)},a.UI.Polygon.prototype.renderDashBeforeUI=function(b){if(this.isShowRotateBeforeUI&&0!==this.coordinates.length){var c=this;b=b||c.ctx;var d=this.getParent(),e=d?d.getAbsolutePosition():new a.Math.Dot,f=new a.Math.Dot(this.coordinates[0].x+e.x,this.coordinates[0].y+e.y);b.save(),b.setLineDash&&b.setLineDash([10]),b.beginPath(),b.moveTo(f.x*this.dpi,f.y*this.dpi);for(var g=0;g<c.coordinates.length-1;g++){var h=c.coordinates[g];b.lineTo(h.x*this.dpi+e.x*this.dpi,h.y*this.dpi+e.y*this.dpi)}b.closePath(),b.strokeStyle=this.strokeStyle,b.stroke(),b.restore()}},a.UI.Polygon.prototype.containDot=function(a,b){b=b||this.noneZeroMode;for(var c=a,d=c.x,e=c.y,f=0,g=0,h=0,i=0;i<this.coordinates.length-1;i++){var j=this.transformByRotate(this.coordinates[i]),k=this.transformByRotate(this.coordinates[i+1]);if(j.x!==k.x){var l=(k.y-j.y)/(k.x-j.x),m=(e-j.y)/l+j.x;d>m||(k.x>j.x&&m>=j.x&&m<=k.x&&(f++,l>=0?g++:h++),k.x<j.x&&m>=k.x&&m<=j.x&&(f++,l>=0?h++:g++))}else{if(d>j.x)continue;k.y>j.y&&e>=j.y&&e<=k.y&&(g++,f++),k.y<j.y&&e>=k.y&&e<=j.y&&(h++,f++)}}return 1===b?g-h!==0:f%2===1}}(Ycc),function(a){a.UI.Ellipse=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.Ellipse,this.point=new a.Math.Dot,this.width=20,this.height=10,this.angle=0,this.color="black",this.fill=!1,this.extend(b)},a.utils.mergeObject(a.UI.Ellipse.prototype,a.UI.Polygon.prototype),a.UI.Ellipse.prototype.constructor=a.UI.Ellipse,a.UI.Ellipse.prototype.computeUIProps=function(){var a=this.point.x,b=this.point.y,c=this.width/2,d=this.height/2,e=this.angle/180*Math.PI,f=Math.sqrt(Math.cos(e)*Math.cos(e)*d*d+Math.sin(e)*Math.sin(e)*c*c)+b,g=-f+2*b,h=Math.sqrt(Math.cos(e)*Math.cos(e)*c*c+Math.sin(e)*Math.sin(e)*d*d)+a,i=-h+2*a;this.rect.x=i,this.rect.y=g,this.rect.width=h-i,this.rect.height=f-g,this.coordinates=this.rect.getVertices(),this.x=this.point.x,this.y=this.point.y},a.UI.Ellipse.prototype.render=function(){var a=this.width*this.dpi,b=this.angle,c=this.height*this.dpi,d=this.transformByRotate(this.point),e=this.ctxCache;e.save();var f=a>c?a:c,g=d.x*this.dpi,h=d.y*this.dpi,i=a/f,j=c/f;e.translate(g,h),e.rotate(parseInt(b)*Math.PI/180),e.translate(-g,-h),e.scale(i,j),e.beginPath(),e.arc(g/i,h/j,f/2,0,2*Math.PI,!1),e.closePath(),e.fillStyle=this.ctx.strokeStyle=this.color,this.fill?e.fill():e.stroke(),e.restore()},a.UI.Ellipse.prototype.containDot=function(b,c){var d=this.transformByRotate(this.point);return b=new a.Math.Dot(b).rotate(-this.angle,d),Math.pow((b.x-d.x)/this.width*2,2)+Math.pow((b.y-d.y)/this.height*2,2)<=1},a.UI.Ellipse.prototype.renderDashBeforeUI=function(a){if(this.isShowRotateBeforeUI&&0!==this.coordinates.length){var b=this.width,c=(this.angle,this.height),d=this.getParent(),e=d?d.transformToAbsolute(this.point):this.point;this.ctx.save();var f=b>c?b:c,g=b/f,h=c/f;this.ctx.scale(g,h),this.ctx.beginPath(),this.ctx.arc(e.x/g,e.y/h,f/2,0,2*Math.PI,!1),this.ctx.closePath(),this.ctx.strokeStyle=this.color,this.ctx.setLineDash&&this.ctx.setLineDash([10]),this.ctx.stroke(),this.ctx.restore()}}}(Ycc),function(a){a.UI.Circle=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.Circle,this.point=null,this.r=10,this.color="black",this.fill=!0,this.lineWidth=1,this.extend(b)},a.utils.mergeObject(a.UI.Circle.prototype,a.UI.Polygon.prototype),a.UI.Circle.prototype.computeUIProps=function(){if(!this.point)return new a.Debugger.Error("Circle need prop point");var b=this.point.x,c=this.point.y,d=this.r;this.rect=new a.Math.Rect(b-d,c-d,2*d,2*d),this.coordinates=this.rect.getVertices(),this.x=this.point.x,this.y=this.point.y},a.UI.Circle.prototype.render=function(){var a=this.ctxCache,b=this.transformByRotate(this.point);a.save(),a.beginPath(),a.fillStyle=this.color,a.strokeStyle=this.color,a.lineWidth=this.lineWidth,a.arc(b.x*this.dpi,b.y*this.dpi,this.r*this.dpi,0,2*Math.PI),a.closePath(),this.fill?a.fill():a.stroke(),a.restore()},a.UI.Circle.prototype.renderDashBeforeUI=function(a){if(this.isShowRotateBeforeUI&&0!==this.coordinates.length){a=this.ctx;var b=this.getParent(),c=b?b.transformToAbsolute(this.point):this.point;a.save(),a.setLineDash&&a.setLineDash([10]),a.beginPath(),this.ctx.arc(c.x,c.y,this.r,0,2*Math.PI),a.closePath(),a.strokeStyle=this.color,a.stroke(),a.restore()}},a.UI.Circle.prototype.containDot=function(a,b){var c=this.transformByRotate(this.point);return Math.pow(a.x-c.x,2)+Math.pow(a.y-c.y,2)<=Math.pow(this.r,2)}}(Ycc),function(a){a.UI.Image=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.Image,this.fillMode="none",this.res=null,this.mirror=0,this.scale9GridRect=null,this.scaleRepeatRect=null,this.extend(b)},a.utils.mergeObject(a.UI.Image.prototype,a.UI.Polygon.prototype),a.UI.Image.prototype.constructor=a.UI.Image,a.UI.Image.prototype.computeUIProps=function(){"auto"===this.fillMode&&(this.rect.width=this.res.width,this.rect.height=this.res.height),this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.Image.prototype._processMirror=function(a){var b=this.ctxCache,c=a.x*this.dpi,d=a.y*this.dpi,e=a.width*this.dpi,f=a.height*this.dpi;1===this.mirror&&(b.scale(-1,1),b.translate(2*-c-e,0)),2===this.mirror&&(b.scale(1,-1),b.translate(0,2*-d-f)),3===this.mirror&&(b.scale(-1,-1),b.translate(2*-c-e,2*-d-f))},a.UI.Image.prototype.render=function(){var b=this.ctxCache;b.save();var c,d,e,f,g,h,i=this.getAbsolutePositionRect(),j=this.res,k=i.x*this.dpi,l=i.y*this.dpi,m=i.width*this.dpi,n=i.height*this.dpi,o=j.width*this.dpi,p=j.height*this.dpi,q=this.transformToAbsolute({x:this.anchorX,y:this.anchorY});if(b.translate(q.x*this.dpi,q.y*this.dpi),b.rotate(this.rotation*Math.PI/180),b.translate(-q.x*this.dpi,-q.y*this.dpi),this._processMirror(i),"none"===this.fillMode)b.drawImage(this.res,0,0,i.width,i.height,i.x,i.y,i.width,i.height);else if("scale"===this.fillMode)b.drawImage(this.res,0,0,j.width,j.height,k,l,m,n);else if("auto"===this.fillMode)b.drawImage(this.res,0,0,j.width,j.height,k,l,m,n);else if("repeat"===this.fillMode)for(e=parseInt(m/o)+1,f=parseInt(n/p)+1,c=0;c<e;c++)for(d=0;d<f;d++)g=j.width,h=j.height,c===e-1&&(g=i.width-c*j.width),d===f-1&&(h=i.height-d*j.height),b.drawImage(this.res,0,0,g,h,k+o*c,l+p*d,g*this.dpi,h*this.dpi);else if("scaleRepeat"===this.fillMode)for(e=parseInt(i.width/this.scaleRepeatRect.width)+1,f=parseInt(i.height/this.scaleRepeatRect.height)+1,c=0;c<e;c++)for(d=0;d<f;d++)g=this.scaleRepeatRect.width,h=this.scaleRepeatRect.height,c===e-1&&(g=i.width-c*this.scaleRepeatRect.width),d===f-1&&(h=i.height-d*this.scaleRepeatRect.height),this.ctx.drawImage(this.res,0,0,j.width,j.height,i.x*this.dpi+this.scaleRepeatRect.width*c,i.y*this.dpi+this.scaleRepeatRect.height*d,g*this.dpi,h*this.dpi);else if("scale9Grid"===this.fillMode){var r,s,t=this.scale9GridRect,u=[];u[0]={},u[0].src=new a.Math.Rect(0,0,t.x,t.y),u[0].dest=new a.Math.Rect(i.x,i.y,t.x,t.y),u[2]={},u[2].src=new a.Math.Rect(t.x+t.width,0,j.width-t.x-t.width,t.y),u[2].dest=new a.Math.Rect(i.width-u[2].src.width+i.x,i.y,u[2].src.width,u[2].src.height),u[6]={},u[6].src=new a.Math.Rect(0,t.y+t.height,t.x,j.height-t.y-t.height),u[6].dest=new a.Math.Rect(i.x,i.y+i.height-u[6].src.height,u[6].src.width,u[6].src.height),u[8]={},u[8].src=new a.Math.Rect(t.x+t.width,t.y+t.height,j.width-t.x-t.width,j.height-t.y-t.height),\\nu[8].dest=new a.Math.Rect(i.width-u[8].src.width+i.x,i.y+i.height-u[8].src.height,u[8].src.width,u[8].src.height),u[1]={},u[1].src=new a.Math.Rect(t.x,0,t.width,t.y),u[1].dest=new a.Math.Rect(u[0].dest.x+u[0].dest.width,i.y,i.width-u[0].dest.width-u[2].dest.width,t.y),u[3]={},u[3].src=new a.Math.Rect(u[0].src.x,t.y,u[0].src.width,t.height),u[3].dest=new a.Math.Rect(u[0].dest.x,u[0].dest.y+u[0].dest.height,u[0].dest.width,i.height-u[0].dest.height-u[6].dest.height),u[5]={},u[5].src=new a.Math.Rect(u[2].src.x,t.y,u[2].src.width,t.height),u[5].dest=new a.Math.Rect(u[2].dest.x,u[3].dest.y,u[2].dest.width,u[3].dest.height),u[7]={},u[7].src=new a.Math.Rect(u[1].src.x,u[6].src.y,t.width,u[6].src.height),u[7].dest=new a.Math.Rect(u[1].dest.x,u[6].dest.y,u[1].dest.width,u[6].dest.height),u[4]={},u[4].src=new a.Math.Rect(t.x,t.y,t.width,t.height),u[4].dest=new a.Math.Rect(u[1].dest.x,u[5].dest.y,u[1].dest.width,u[5].dest.height);for(var v=0;v<u.length;v++)u[v]&&(r=u[v].src,s=u[v].dest,b.drawImage(this.res,r.x,r.y,r.width,r.height,s.x*this.dpi,s.y*this.dpi,s.width*this.dpi,s.height*this.dpi))}b.restore()}}(Ycc),function(a){a.UI.ImageFrameAnimation=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.ImageFrameAnimation,this.res=null,this.frameSpace=1,this.firstFrameRect=null,this.startFrameCount=0,this.frameRectCount=1,this.autoplay=!1,this.isRunning=!1,this.mirror=0,this.extend(b),this.isRunning=this.autoplay},a.utils.mergeObject(a.UI.ImageFrameAnimation.prototype,a.UI.Polygon.prototype),a.UI.ImageFrameAnimation.prototype.constructor=a.UI.ImageFrameAnimation,a.UI.ImageFrameAnimation.prototype.computeUIProps=function(){this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.ImageFrameAnimation.prototype._processMirror=function(a){var b=this.ctxCache,c=a.x*this.dpi,d=a.y*this.dpi,e=a.width*this.dpi,f=a.height*this.dpi;1===this.mirror&&(b.scale(-1,1),b.translate(2*-c-e,0)),2===this.mirror&&(b.scale(1,-1),b.translate(0,2*-d-f)),3===this.mirror&&(b.scale(-1,-1),b.translate(2*-c-e,2*-d-f))},a.UI.ImageFrameAnimation.prototype.render=function(){var a=this.ctxCache,b=this.getAbsolutePositionRect(),c=b.x*this.dpi,d=b.y*this.dpi,e=b.width*this.dpi,f=b.height*this.dpi,g=parseInt((this.belongTo.yccInstance.ticker.frameAllCount-this.startFrameCount)/this.frameSpace)%this.frameRectCount+1;(!this.isRunning||g>=this.frameRectCount)&&(g=0),a.save(),this.scaleAndRotate(),this._processMirror(b),a.drawImage(this.res,this.firstFrameRect.x+this.firstFrameRect.width*g,this.firstFrameRect.y,this.firstFrameRect.width,this.firstFrameRect.height,c,d,e,f),a.restore()},a.UI.ImageFrameAnimation.prototype.start=function(){this.startFrameCount=this.belongTo.yccInstance.ticker.frameAllCount,this.isRunning=!0},a.UI.ImageFrameAnimation.prototype.stop=function(){this.isRunning=!1}}(Ycc),function(a){a.UI.Line=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.Line,this.start=new a.Math.Dot(0,0),this.end=new a.Math.Dot(0,0),this.width=1,this.color="black",this.extend(b)},a.utils.mergeObject(a.UI.Line.prototype,a.UI.Polygon.prototype),a.UI.Line.prototype.constructor=a.UI.Line,a.UI.Line.prototype.computeUIProps=function(){this.rect.x=this.start.x<this.end.x?this.start.x:this.end.x,this.rect.y=this.start.y<this.end.y?this.start.y:this.end.y,this.rect.width=Math.abs(this.start.x-this.end.x),this.rect.height=Math.abs(this.start.y-this.end.y);var a=this.start.x,b=this.start.y,c=this.end.x,d=this.end.y,e=-(c-a)/(d-b);if(d-b===0)this.coordinates=[{x:this.start.x,y:this.start.y-this.width/2},{x:this.start.x,y:this.start.y+this.width/2},{x:this.end.x,y:this.end.y+this.width/2},{x:this.end.x,y:this.end.y-this.width/2},{x:this.start.x,y:this.start.y-this.width/2}];else{var f=a-Math.pow(Math.pow(this.width/2,2)/(e*e+1),.5),g=a+Math.pow(Math.pow(this.width/2,2)/(e*e+1),.5),h=c+Math.pow(Math.pow(this.width/2,2)/(e*e+1),.5),i=c-Math.pow(Math.pow(this.width/2,2)/(e*e+1),.5),j=e*(f-a)+b,k=e*(g-a)+b,l=e*(h-c)+d,m=e*(i-c)+d;this.coordinates=[{x:f,y:j},{x:g,y:k},{x:h,y:l},{x:i,y:m},{x:f,y:j}]}this.x=this.start.x,this.y=this.start.y,this.strokeStyle=this.color,this.fillStyle=this.color}}(Ycc),function(a){a.UI.BrokenLine=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.BrokenLine,this.pointList=[],this.width=1,this.color="black",this.smooth=!1,this.extend(b)},a.utils.mergeObject(a.UI.BrokenLine.prototype,a.UI.Polygon.prototype),a.UI.BrokenLine.prototype.computeUIProps=function(){if(0===this.pointList.length)return this.rect.x=0,this.rect.y=0,this.rect.width=0,this.rect.height=0,null;for(var a=this.pointList[0].x,b=this.pointList[0].y,c=this.pointList[0].x,d=this.pointList[0].y,e=0;e<this.pointList.length;e++){var f=this.pointList[e];f.x<a?a=f.x:f.x>c&&(c=f.x),f.y<b?b=f.y:f.y>d&&(d=f.y)}this.rect.x=a,this.rect.y=b,this.rect.width=c-a,this.rect.height=d-b,this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.BrokenLine.prototype.render=function(){if(this.pointList.length<2)return null;var a=this.ctxCache;this.getParent();a.save(),a.strokeStyle=this.color,a.strokeWidth=this.width,a.beginPath();var b=this.transformByRotate(this.pointList);this.smooth?this._smoothLineRender(b):this._normalRender(b),a.closePath(),a.restore()},a.UI.BrokenLine.prototype._normalRender=function(a){var b=this.ctxCache;b.moveTo(a[0].x*this.dpi,a[0].y*this.dpi);for(var c=1;c<a.length;c++)b.lineTo(a[c].x*this.dpi,a[c].y*this.dpi);b.stroke()},a.UI.BrokenLine.prototype._smoothLineRender=function(b){function c(b){var c=1/3,d=[];d.push({start:b[0],end:b[1],dot1:b[0],dot2:null});for(var e=1;e<b.length-1;e++){var f=b[e],g=b[e+1],h=b[e-1],i=new a.Math.Dot(f.x-c*Math.abs(f.x-h.x),f.y),j=new a.Math.Dot(f.x+c*Math.abs(f.x-g.x),f.y);d[e-1].dot2=i,d.push({start:f,end:g,dot1:j,dot2:null})}return d[d.length-1].dot2=b[b.length-1],d}var d=this.ctxCache,e=c(b);d.beginPath();for(var f=0;f<e.length;f++)d.moveTo(e[f].start.x*this.dpi,e[f].start.y*this.dpi),d.bezierCurveTo(e[f].dot1.x*this.dpi,e[f].dot1.y*this.dpi,e[f].dot2.x*this.dpi,e[f].dot2.y*this.dpi,e[f].end.x*this.dpi,e[f].end.y*this.dpi);d.stroke()},a.UI.BrokenLine.prototype._smoothLineRender02=function(a){}}(Ycc),function(a){a.UI.MultiLineText=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.MultiLineText,this.displayLines=[],this.content="",this.fontSize="16px",this.lineHeight=24,this.fill=!0,this.color="black",this.wordBreak="break-all",this.overflow="auto",this.extend(b)},a.utils.mergeObject(a.UI.MultiLineText.prototype,a.UI.Polygon.prototype),a.UI.MultiLineText.prototype.constructor=a.UI.MultiLineText,a.UI.MultiLineText.prototype.computeUIProps=function(){function a(){function a(){function a(e){var f=[],g=c.measureText(e).width;if(g<=d.rect.width*b.dpi)return f.push(e),f;for(var h=0;h<e.length;h++){var i=e.slice(0,h+1),j=c.measureText(i).width;if(j>d.rect.width*b.dpi){var k=e.slice(0,h-1);f.push(k);var l=e.slice(h-1);return f=f.concat(a(l))}}}for(var f=[],g=0;g<e.length;g++){var h=e[g],i=a(h);f=f.concat(i)}return f}function f(){function a(e){var f=[],g=c.measureText(e).width;if(g<=d.rect.width*b.dpi)return f.push(e),f;for(var h=0,i=0;i<e.length;i++){var j=e.slice(0,i+1),k=c.measureText(j).width,l=e[i];if(" "===l&&(h=i),k>d.rect.width*b.dpi){var m="",n="";return" "===l||0===h?(m=e.slice(0,i),f.push(m),n=e.slice(i),f=f.concat(a(n))):(m=e.slice(0,h),f.push(m),n=e.slice(h),f=f.concat(a(n)))}}}for(var f=[],g=0;g<e.length;g++){var h=e[g],i=a(h);f=f.concat(i)}return f}switch(d.wordBreak){case"no-break":case"break-all":return a();case"break-word":return f();default:return a()}}var b=this,c=this.ctxCache;b.belongTo._setCtxProps(b,c);var d=this,e=this.content.split(/(?:\\\\r\\\\n|\\\\r|\\\\n)/);this.displayLines=a(),"auto"===d.overflow&&(d.rect.height=d.lineHeight*this.displayLines.length),this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.MultiLineText.prototype.render=function(a){var b=this;if(a=a||this.ctxCache,!a)return void console.error("[Ycc error]:","ctx is null !");var c=this,d=this.getAbsolutePositionRect(),e=c.lineHeight*b.dpi;a.save(),a.fillStyle=c.color,a.strokeStyle=c.color;var f=this.transformToAbsolute({x:this.anchorX,y:this.anchorY});a.translate(f.x,f.y),a.rotate(this.rotation*Math.PI/180),a.translate(-f.x,-f.y);for(var g=0;g<b.displayLines.length;g++){var h=d.x*b.dpi,i=d.y*b.dpi+g*c.lineHeight*b.dpi;if(i+e>d.y*b.dpi+d.height*b.dpi)break;a.fillText(b.displayLines[g],h,i)}a.restore()}}(Ycc),function(a){a.UI.Rect=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.Rect,this.fill=!0,this.color="black",this.extend(b)},a.utils.mergeObject(a.UI.Rect.prototype,a.UI.Polygon.prototype),a.UI.Rect.prototype.computeUIProps=function(){this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.Rect.prototype.render=function(a){var b=this;return(a=a||b.ctxCache)?(a.save(),a.fillStyle=this.color,a.strokeStyle=this.color,this.renderPath(a),this.fill?a.fill():a.stroke(),void a.restore()):void console.error("[Ycc error]:","ctx is null !")}}(Ycc),function(a){a.UI.CropRect=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.CropRect,this.ctrlSize=6,this.enableDragOut=!1,this.fill=!0,this.ctrlRect1=new a.Math.Rect,this.ctrlRect2=new a.Math.Rect,this.ctrlRect3=new a.Math.Rect,this.ctrlRect4=new a.Math.Rect,this.btns=[],this.btnHeight=38,this.btnVerticalPadding=10,this.showName=!0,this.extend(b),this._initUI()},a.utils.mergeObject(a.UI.CropRect.prototype,a.UI.Polygon.prototype),a.UI.CropRect.prototype.showBtns=function(b){if(this.btns.length>0){for(var c=0;c<this.btns.length;c++)a.utils.isObj(this.btns[c])&&(this.btns[c].show=b);this.belongTo.yccInstance.layerManager.reRenderAllLayerToStage()}},a.UI.CropRect.prototype.setCtrlBtns=function(b){var c=this;0!==b.length&&b.forEach(function(b){b=a.utils.extend({content:"",rectBgColor:"#666",color:"#fff",ontap:function(){}},b);var d=new a.UI.SingleLineText(b);d.addListener("mouseover",function(){this.color="#ccc",this.belongTo.yccInstance.layerManager.reRenderAllLayerToStage()}),d.addListener("mouseout",function(){this.color="#fff",this.belongTo.yccInstance.layerManager.reRenderAllLayerToStage()}),c.btns.push(d),c.belongTo.addUI(d)})},a.UI.CropRect.prototype.computeUIProps=function(){this.belongTo._setCtxProps(this);var b=this.rect,c=0,d=0,e=this.rect.x,f=this.rect.y+this.rect.height,g=this.belongTo.yccInstance.getStageWidth(),h=this.belongTo.yccInstance.getStageHeight();if(this.ctrlRect1=new a.Math.Rect(b.x,b.y,this.ctrlSize,this.ctrlSize),this.ctrlRect2=new a.Math.Rect(b.x+b.width-this.ctrlSize,b.y,this.ctrlSize,this.ctrlSize),this.ctrlRect3=new a.Math.Rect(b.x,b.y+b.height-this.ctrlSize,this.ctrlSize,this.ctrlSize),this.ctrlRect4=new a.Math.Rect(b.x+b.width-this.ctrlSize,b.y+b.height-this.ctrlSize,this.ctrlSize,this.ctrlSize),0!==this.btns.length){for(var i=0;i<this.btns.length;i++){var j=this.btns[i];j.overflow="auto",j.xAlign="center",j.rect.width=parseInt(this.ctx.measureText(j.content).width+2*this.btnVerticalPadding),j.rect.height=this.btnHeight,c+=j.rect.width+1}e+c>g&&(e=g-c),f+this.btnHeight>h&&(f=this.rect.y<this.btnHeight?0:this.rect.y-this.btnHeight-2);for(var k=0;k<this.btns.length;k++){var l=this.btns[k];l.rect.x=e+d,l.rect.y=f+2,d+=l.rect.width+1}this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y}},a.UI.CropRect.prototype._initUI=function(){var b=this,c=null,d=null;this.userData=this.userData?this.userData:{},this.addListener("dragstart",function(e){console.log("dragstart",e),this.userData.ctrlStart=0,this.userData.dragStartPosition=new a.Math.Rect(this.rect),this.userData.dragStartMousePosition=new a.Math.Dot(e);var f=new a.Math.Dot(e);c=f,d=new a.Math.Rect(b.rect);for(var g=1;g<=4;g++)if(f.isInRect(this["ctrlRect"+g]))return this.userData.ctrlStart=g,null}),this.addListener("dragging",function(a){var b,e,f,g,h=this.userData.dragStartPosition,i=this.userData.dragStartMousePosition;if(this.userData.ctrlStart<=4&&this.userData.ctrlStart>=1?(1===this.userData.ctrlStart&&(b=a.x-(i.x-h.x),e=a.y-(i.y-h.y),f=h.width-(a.x-h.x),g=h.height-(a.y-h.y),b<=h.x+h.width-2*this.ctrlSize&&(this.rect.x=b),e<=h.y+h.height-2*this.ctrlSize&&(this.rect.y=e)),2===this.userData.ctrlStart&&(b=h.x,e=a.y-(i.y-h.y),f=a.x-h.x+(h.width+h.x-i.x),g=h.height-(a.y-h.y),this.rect.x=b,e<=h.y+h.height-2*this.ctrlSize&&(this.rect.y=e)),3===this.userData.ctrlStart&&(b=a.x-(i.x-h.x),e=h.y,f=h.width-(a.x-h.x),g=a.y-h.y+(h.height+h.y-i.y),b<=h.x+h.width-2*this.ctrlSize&&(this.rect.x=b),this.rect.y=e),4===this.userData.ctrlStart&&(this.rect.x=h.x,this.rect.y=h.y,this.rect.width=a.x-h.x+(h.x+h.width-i.x),this.rect.height=a.y-h.y+(h.y+h.height-i.y)),f>=2*this.ctrlSize&&(this.rect.width=f),g>=2*this.ctrlSize&&(this.rect.height=g)):(this.rect.x=d.x+a.x-c.x,this.rect.y=d.y+a.y-c.y),this.rect.width<=2*this.ctrlSize&&(this.rect.width=2*this.ctrlSize),this.rect.height<=2*this.ctrlSize&&(this.rect.height=2*this.ctrlSize),!this.enableDragOut){var j=this.belongTo.yccInstance.getStageWidth(),k=this.belongTo.yccInstance.getStageHeight();this.rect.x<=0&&(this.rect.x=0),this.rect.y<=0&&(this.rect.y=0),this.rect.x+this.rect.width>=j&&(this.rect.x=j-this.rect.width),this.rect.y+this.rect.height>=k&&(this.rect.y=k-this.rect.height)}this.belongTo.yccInstance.layerManager.reRenderAllLayerToStage()}),this.addListener("dragend",function(a){b.showBtns(!0)})},a.UI.CropRect.prototype.render=function(){var a=this.rect;this.ctx.save(),this.ctx.fillStyle=this.fillStyle,this.ctx.strokeStyle=this.strokeStyle,this.ctx.beginPath(),this.ctx.rect(a.x,a.y,a.width,a.height),this.ctx.closePath(),this.fill?this.ctx.fill():this.ctx.stroke(),this.ctx.beginPath(),this.ctx.rect(this.ctrlRect1.x,this.ctrlRect1.y,this.ctrlRect1.width,this.ctrlRect1.height),this.ctx.rect(this.ctrlRect2.x,this.ctrlRect2.y,this.ctrlRect2.width,this.ctrlRect2.height),this.ctx.rect(this.ctrlRect3.x,this.ctrlRect3.y,this.ctrlRect3.width,this.ctrlRect3.height),this.ctx.rect(this.ctrlRect4.x,this.ctrlRect4.y,this.ctrlRect4.width,this.ctrlRect4.height),this.ctx.closePath(),this.ctx.fill(),this.ctx.restore(),this.ctx.save(),this.ctx.beginPath(),this.ctx.fillStyle="blue",this.ctx.font="normal normal bold 14px Arial",this.ctx.fillText(this.name,a.x+10,a.y+10),this.ctx.closePath(),this.ctx.restore()},a.UI.CropRect.prototype.removeSelf=function(){this.belongTo.removeUI(this),this.btns.forEach(function(a){a.removeSelf()})}}(Ycc),function(a){a.UI.SingleLineText=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.SingleLineText,this.displayContent="",this.content="",this.fontSize="16px",this.fill=!0,this.color="black",this.xAlign="left",this.yAlign="center",this.overflow="auto",this.extend(b)},a.utils.mergeObject(a.UI.SingleLineText.prototype,a.UI.Polygon.prototype),a.UI.SingleLineText.prototype.constructor=a.UI.SingleLineText,a.UI.SingleLineText.prototype.computeUIProps=function(){var a=this,b=this.ctxCache,c=this.rect,d=(c.x*this.dpi,c.y*this.dpi,c.width*this.dpi);c.height*this.dpi;this._setCtxProps(a);var e=b.measureText(this.content).width;this.displayContent=this.content,"hidden"===this.overflow?e>d&&(a.displayContent=a.getMaxContentInWidth(this.content,d)):"auto"===this.overflow&&(e>d&&(this.rect.width=e/this.dpi),parseInt(this.fontSize)>this.rect.height&&(this.rect.height=parseInt(this.fontSize))),this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.SingleLineText.prototype.render=function(b){var c=this;if(b=b||c.ctxCache,!b)return void console.error("[Ycc error]:","ctx is null !");c.belongTo._setCtxProps(c,b);var d,e,f=this.belongTo.yccInstance.getSystemInfo().devicePixelRatio,g=parseInt(c.fontSize)*f,h=this,i=this.getAbsolutePositionRect();i=new a.Math.Rect(i.x*f,i.y*f,i.width*f,i.height*f),d=i.x;var j=b.measureText(this.displayContent).width;if("center"===this.xAlign&&(d+=(i.width-j)/2),"right"===this.xAlign&&(d+=i.width-j),e=i.y,g>i.height)return console.warn("[Ycc warning] : ","行高不够，或者文字太大！",h);"center"===h.yAlign&&(e=e+i.height/2-g/2),b.save();var k=this.transformToAbsolute({x:this.anchorX,y:this.anchorY});b.translate(k.x*this.dpi,k.y*this.dpi),b.rotate(this.rotation*Math.PI/180),b.translate(-k.x*this.dpi,-k.y*this.dpi),b.fillStyle=h.color,b.strokeStyle=h.color,b.fillText(c.displayContent,d,e),b.restore()}}(Ycc),function(a){a.UI.ScrollerRect=function(b){a.UI.Polygon.call(this,b),this.yccClass=a.UI.ScrollerRect,this.selfRender=!1,this.contentW=0,this.contentH=0,this.enableSwipe=!1,this.swipeFrameCount=10,this.swipeAcceleration=.5,this.swipeInitSpeed=20,this.extend(b),this.ghost=!0,this._wrapper=null,this._eventWrapper=null,this.stopEventBubbleUp=!1,this._onAdded=function(){this._initWrapperRect(),this._initEvent()},this._onChildrenRendered=function(){this.ctx.restore()}},a.utils.mergeObject(a.UI.ScrollerRect.prototype,a.UI.Polygon.prototype),a.UI.ScrollerRect.prototype.computeUIProps=function(){this.coordinates=this.rect.getVertices(),this.x=this.rect.x,this.y=this.rect.y},a.UI.ScrollerRect.prototype.render=function(a){var b=this;a=a||b.ctxCache,a.save(),this.renderPath(a),a.clip()},a.UI.ScrollerRect.prototype.addChild=function(a){return this.belongTo&&a.init(this.belongTo),a===this._wrapper||a===this._eventWrapper?this.addChildTree(a):this._wrapper.addChildTree(a),a},a.UI.ScrollerRect.prototype._initEvent=function(){function b(){c.selfRender&&c.belongTo&&c.belongTo.yccInstance&&c.belongTo.yccInstance.layerManager.reRenderAllLayerToStage()}var c=this;if(!c.belongTo)return console.log("scroller need add to stage!");var d=c.belongTo.yccInstance.ticker,e={rect:null,startEvent:null,tickerIsRunning:!1},f={rect:null,endEvent:null},g=!1;this._eventWrapper.addListener("tap",function(a){var b=c.belongTo.getUIListFromPointer(a,{uiIsShow:!0,uiIsGhost:!1});b=b.filter(function(a){return a.show&&!a.ghost}),b.length<=1||b[b.length-2].triggerUIEventBubbleUp("tap",a.x,a.y)}),this._eventWrapper.addListener("dragstart",function(f){e.tickerIsRunning=d._isRunning,e.startEvent=f,e.rect=new a.Math.Rect(c._wrapper.rect),g=!0,d.start(),d.addFrameListener(b)}),this._eventWrapper.addListener("dragging",function(a){var b=a.x-e.startEvent.x,d=a.y-e.startEvent.y;g=!0,c._wrapper.rect.x=e.rect.x+b,c._wrapper.rect.y=e.rect.y+d,c._checkRangeLimit()}),this._eventWrapper.addListener("dragend",function(e){f.endEvent=e,f.rect=new a.Math.Rect(c._wrapper.rect),d.removeFrameListener(b)}),this._eventWrapper.addListener("swipe",function(a){function b(){return l++,k=l*(i-c.swipeAcceleration*l),l>=j||k<=0||g?void d.removeFrameListener(b):("left"!==e&&"right"!==e||(c._wrapper.rect.x=f.rect.x+h[e]*k),"up"!==e&&"down"!==e||(c._wrapper.rect.y=f.rect.y+h[e]*k),c._checkRangeLimit(),void(c.selfRender&&c.belongTo&&c.belongTo.yccInstance&&c.belongTo.yccInstance.layerManager.reRenderAllLayerToStage()))}if(!c.enableSwipe){var e=a.originEvent.swipeDirection,h={left:-1,right:1,up:-1,down:1},i=c.swipeInitSpeed,j=c.swipeFrameCount,k=0,l=0;g=!1,d.addFrameListener(b)}})},a.UI.ScrollerRect.prototype._initWrapperRect=function(){this._wrapper=new a.UI.Rect({name:"滚动区UI容器",opacity:0,rect:new a.Math.Rect(0,0,this.rect.width,this.rect.height),ghost:!0}),this._eventWrapper=new a.UI.Rect({name:"滚动区事件容器",opacity:0,rect:new a.Math.Rect(this.rect.x,this.rect.y,this.rect.width,this.rect.height),ghost:!1}),this.addChild(this._wrapper),this.belongTo.addUI(this._eventWrapper)},a.UI.ScrollerRect.prototype._checkRangeLimit=function(){var a=this,b=a.contentW-a.rect.width,c=a.contentH-a.rect.height;a._wrapper.rect.x=a._wrapper.rect.x>=0?0:a._wrapper.rect.x,a._wrapper.rect.y=a._wrapper.rect.y>=0?0:a._wrapper.rect.y,a._wrapper.rect.x=a._wrapper.rect.x<-b?-b:a._wrapper.rect.x,a._wrapper.rect.y=a._wrapper.rect.y<-c?-c:a._wrapper.rect.y,a.contentW<=a.rect.width&&(a._wrapper.rect.x=0),a.contentH<=a.rect.height&&(a._wrapper.rect.y=0)}}(Ycc),function(a){a.UI.ComponentButton=function(b){a.UI.Base.call(this,b),this.yccClass=a.UI.ComponentButton,this.rectBorderWidth=1,this.rectBorderColor="#000",this.backgroundImageRes=null,this.text="",this.textColor="black",this.__bgUI=null,this.__textUI=null,this.extend(b),this.__componentInit()},a.utils.mergeObject(a.UI.ComponentButton.prototype,a.UI.Base.prototype),a.UI.ComponentButton.prototype.constructor=a.UI.ComponentButton,a.UI.ComponentButton.prototype.__componentInit=function(){this.backgroundImageRes&&(this.__bgUI=new a.UI.Image({rect:new a.Math.Rect(0,0,this.rect.width,this.rect.height),fillMode:"scale",res:this.backgroundImageRes,stopEventBubbleUp:!1}),this.addChild(this.__bgUI)),""!==this.text&&(this.__textUI=new a.UI.SingleLineText({rect:new a.Math.Rect(0,0,this.rect.width,this.rect.height),content:this.text,color:this.textColor,xAlign:"center",stopEventBubbleUp:!1}),this.addChild(this.__textUI))},a.UI.Base.prototype.computeUIProps=function(){this.__bgUI&&(this.__bgUI.rect.width=this.rect.width,this.__bgUI.rect.height=this.rect.height,this.__bgUI.res=this.backgroundImageRes),this.__textUI&&(this.__textUI.rect.width=this.rect.width,this.__textUI.rect.height=this.rect.height,this.__textUI.content=this.text,this.__textUI.color=this.textColor)}}(Ycc),"undefined"!=typeof wx&&(Ycc.utils.isMobile=function(){return console.log("wx isMobile"),!0},"undefined"!=typeof performance&&(performance.now=function(){return Date.now()}),Ycc.prototype.getSystemInfo=function(){var a=wx.getSystemInfoSync();return{model:a.model,pixelRatio:a.pixelRatio,windowWidth:a.windowWidth,windowHeight:a.windowHeight,screenWidth:a.screenWidth,screenHeight:a.screenHeight,devicePixelRatio:a.devicePixelRatio||1}}), true&&"undefined"!=typeof module)module.exports=Ycc;else if(true)!(__WEBPACK_AMD_DEFINE_FACTORY__ = (Ycc),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \\\'function\\\' ?\\n\\t\\t\\t\\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_FACTORY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else{ var g; }\\n//# sourceMappingURL=ycc.min.js.map//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///0\\n\')},,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\\n/* harmony import */ var _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0__);\\n/**\\n * 裁剪类的封装\\n * @requires {Ycc} 依赖Ycc库\\n * @author xiaohei\\n */\\n\\n\\n\\n/**\\n * 裁剪图片\\n * @param {*} imageUrl 图片地址\\n * @param {Object} options 配置参数\\n * @param {HTMLCanvasElement} options.canvasDom canvas容器\\n * @param {Number} options.wrapW 可视区宽度\\n * @param {Number} options.wrapH 可视区高度\\n * @param {Number} options.cropW 裁剪区的高\\n * @param {String} options.maskColor 遮罩的色值\\n * @param {String} options.lineColor 线条的色值\\n * @param {Boolean} options.enableZoom 允许缩放\\n * @param {Boolean} options.enableRotate 允许旋转\\n * @param {Boolean} options.enableDrag 允许拖拽\\n * @constructor\\n */\\nfunction Cropper(imageUrl,options){\\n    // 默认参数\\n    options = _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.utils.extend({\\n        appenv:\'h5\',\\n        canvasDom:null,\\n        wrapW:800,\\n        wrapH:600,\\n        cropW:200,\\n        cropH:200,\\n        maskColor:\'rgba(0,0,0,0.6)\',\\n        lineColor:\'#fff\',\\n        enableZoom:true,\\n        enableRotate:true,\\n        enableDrag:true,\\n    },options);\\n\\n    this.options = options;\\n    this.imageUrl = imageUrl;\\n    this.ycc = new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a({\\n        appenv:options.appenv,\\n        // debugDrawContainer:true\\n    });\\n    this.ycc.bindCanvas(this.ycc.createCanvas({canvasDom:options.canvasDom,width:options.wrapW,height:options.wrapH,dpiAdaptation:true}));\\n    this.layer = this.ycc.layerManager.newLayer({enableEventManager:true});\\n\\n    // 图片UI\\n    this.imageUI = null;\\n\\n    this.init();\\n}\\n\\nCropper.prototype.init = function(){\\n    var that = this;\\n    this.ycc.loader.loadResOneByOne([{url:this.imageUrl}],function (resArr) {\\n        console.log(\\"loaded!\\",this);\\n        that._onImageLoad(resArr[0]);\\n    },function (image,err,index) {\\n        console.log(\'progress\',index,image);\\n    });\\n\\n    this.ycc.ticker.addFrameListener(function(){\\n        that.ycc.layerManager.reRenderAllLayerToStage();\\n    })\\n\\n    this.ycc.ticker.start(60);\\n}\\n\\nCropper.prototype._onImageLoad = function(image){\\n    this._addImage(image);\\n    this._addCrop();\\n}\\n\\nCropper.prototype._addCrop = function(){\\n    var layer = this.layer;\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(0,0,this.options.wrapW,this.options.wrapH/2-this.options.cropH/2),\\n        color:this.options.maskColor,\\n        ghost:true,\\n    }));\\n\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(0,this.options.wrapH-(this.options.wrapH/2-this.options.cropH/2),this.options.wrapW,this.options.wrapH/2-this.options.cropH/2),\\n        color:this.options.maskColor,\\n        ghost:true,\\n    }));\\n\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(0,this.options.wrapH/2-this.options.cropH/2,this.options.wrapW/2-this.options.cropW/2,this.options.cropH),\\n        color:this.options.maskColor,\\n        ghost:true,\\n    }));\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(this.options.wrapW-(this.options.wrapW/2-this.options.cropW/2),this.options.wrapH/2-this.options.cropH/2,this.options.wrapW/2-this.options.cropW/2,this.options.cropH),\\n        color:this.options.maskColor,\\n        ghost:true,\\n    }));\\n\\n    // 横纵线条 1\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(0,this.options.wrapH/2-this.options.cropH/2,this.options.wrapW,1),\\n        color:this.options.lineColor,\\n        ghost:true,\\n    }));\\n    // 横纵线条 2\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(this.options.wrapW/2-this.options.cropW/2,0,1,this.options.wrapH),\\n        color:this.options.lineColor,\\n        ghost:true,\\n    }));\\n    // 横纵线条 3\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(this.options.wrapW/2+this.options.cropW/2,0,1,this.options.wrapH),\\n        color:this.options.lineColor,\\n        ghost:true,\\n    }));\\n    // 横纵线条 4\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(0,this.options.wrapH/2+this.options.cropH/2,this.options.wrapW,1),\\n        color:this.options.lineColor,\\n        ghost:true,\\n    }));\\n\\n    // 边框\\n    layer.addUI(new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Rect({\\n        rect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect((this.options.wrapW/2-this.options.cropW/2),this.options.wrapH/2-this.options.cropH/2,this.options.cropW,this.options.cropH),\\n        rectBorderWidth:1,\\n        rectBorderColor:this.options.lineColor,\\n        color:\'transparent\',\\n        ghost:true,\\n    }));\\n}\\n\\n\\n// 添加图片\\nCropper.prototype._addImage = function(image){\\n    var ycc = this.ycc;\\n    var cropper = this;\\n\\n    var ratioW = image.res.width/this.options.wrapW;\\n    var ratioH = image.res.height/this.options.wrapH;\\n\\n    var scaleRatio = 1;\\n    var imageRect = null;\\n    if(ratioW<ratioH){\\n        scaleRatio = ratioH;\\n        imageRect = new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect((this.options.wrapW-image.res.width/scaleRatio)/2,0,image.res.width/scaleRatio,image.res.height/scaleRatio);\\n    }else{\\n        scaleRatio = ratioW;\\n        imageRect = new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(0,(this.options.wrapH-image.res.height/scaleRatio)/2,image.res.width/scaleRatio,image.res.height/scaleRatio);\\n    }\\n\\n    console.log(\'scaleRatio\',scaleRatio,ratioW<ratioH)\\n    this.imageUI = new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.UI.Image({\\n        rect:imageRect,\\n        fillMode:\'scale\',\\n        res:image.res\\n    });\\n    // 添加图片至图层\\n    this.layer.addUI(this.imageUI);\\n\\n\\n    // 缩放前的临时区域\\n    var tempRect = null;\\n    // 监听手势事件\\n    this.ycc.gesture.ondragstart = function(e) {\\n        console.log(e,1111);\\n        this.userData = {\\n            startPos:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Dot(e),\\n            startRect:new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(cropper.imageUI.rect)\\n        }\\n    };\\n    this.ycc.gesture.ondragging = function(e){\\n        if(this.ismutiltouching) return;\\n        if(!this.userData) return;\\n        if(!cropper.options.enableDrag) return;\\n\\n        var startPos = this.userData.startPos;\\n        var startRect = this.userData.startRect;\\n        let deltaX = (e.x-startPos.x);\\n        let deltaY = (e.y-startPos.y);\\n        cropper.imageUI.rect.x = startRect.x+deltaX;\\n        cropper.imageUI.rect.y = startRect.y+deltaY;\\n\\n        // 固定锚点在图片正中心\\n        cropper.imageUI.anchorX = imageRect.x+imageRect.width/2;\\n        cropper.imageUI.anchorY = imageRect.y+imageRect.height/2;\\n    }\\n    this.ycc.gesture.onmultistart = function(e){\\n        tempRect = new _datagetter_cn_ycc__WEBPACK_IMPORTED_MODULE_0___default.a.Math.Rect(cropper.imageUI.rect); \\n        // 将userdata设置成null 阻止缩放后立即响应拖拽\\n        this.userData = null;\\n    };\\n    // 绑定缩放事件\\n    this.ycc.gesture.onzoom = function(e){\\n        // alert(\'zoom \'+e.zoomRate);\\n        if(!cropper.options.enableZoom) return;\\n\\n        var rate = e.zoomRate;\\n        imageRect.width = tempRect.width*rate;\\n        imageRect.height =tempRect.height*rate;\\n\\n        // 固定锚点在图片正中心\\n        imageRect.x = tempRect.x-(imageRect.width-tempRect.width)/2;\\n        imageRect.y = tempRect.y-(imageRect.height-tempRect.height)/2;\\n    };\\n    this.ycc.gesture.onrotate = function(e){\\n        if(!cropper.options.enableRotate) return;\\n\\n        var angle = e.angle;\\n        cropper.imageUI.anchorX = imageRect.x+imageRect.width/2;\\n        cropper.imageUI.anchorY = imageRect.y+imageRect.height/2;\\n        cropper.imageUI.rotation += angle;\\n    };\\n\\n}\\n\\n/**\\n * 获取imagedata\\n * @param {*} canvasId canvas的ID 仅当appenv为wxapp时需要\\n */\\nCropper.prototype.getCropImage = function(canvasId){\\n    var x = (this.options.wrapW/2-this.options.cropW/2);\\n    var y = this.options.wrapH/2-this.options.cropH/2;\\n    var width = this.options.cropW;\\n    var height = this.options.cropH;\\n\\n    if(this.options.appenv===\'wxapp\') return wx.canvasToTempFilePath({\\n        canvasId:canvasId,\\n        canvas:this.ycc.canvasDom,\\n        x:x,\\n        y:y,\\n        width:width,\\n        height:height,\\n        destWidth:width,\\n        destHeight:height,\\n        fileType:\'jpg\',\\n        quality:1\\n    })\\n\\n\\n    var ycc = this.ycc;\\n    return ycc.ctx.getImageData(x*this.ycc.dpi,y*this.ycc.dpi,width*this.ycc.dpi,height*this.ycc.dpi);\\n};\\n\\n/**\\n * 清空画布\\n */\\nCropper.prototype.clear = function(){\\n    this.ycc.layerManager.deleteAllLayer();\\n    this.ycc.ticker.stop();\\n}\\n\\n\\n\\n///////////// 兼容es5模式\\nvar g;\\nif(typeof window!==\\"undefined\\"){g=window}\\nelse if(typeof global!==\\"undefined\\"){g=global}\\nelse if(typeof self!==\\"undefined\\"){g=self}\\nelse{g=undefined}\\ng.Cropper = Cropper;\\n\\n// 导出模块\\n/* harmony default export */ __webpack_exports__[\\"default\\"] = (Cropper);\\n\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(3)))//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\\n//# sourceURL=webpack-internal:///2\\n")},function(module,exports){eval(\'var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function("return this")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === "object") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it\\\'s\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n//# sourceURL=[module]\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanM/Y2QwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\\n//# sourceURL=webpack-internal:///3\\n\')}])}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1\n')},,,function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _build_lib_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _build_lib_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_build_lib_js__WEBPACK_IMPORTED_MODULE_0__);\n\nconsole.log(_build_lib_js__WEBPACK_IMPORTED_MODULE_0___default.a)\n\nvar cropper = new _build_lib_js__WEBPACK_IMPORTED_MODULE_0___default.a('http://datagetter.cn:9000/datagetter.cn/public/original/wx_test_kid_oXWPn5V5YxiQVoSyK3IDFQ2XnqhM_.jpg_1621776883437_4289396_wx_test_kid_oXWPn5V5YxiQVoSyK3IDFQ2XnqhM_.jpg',{\n    wrapW:300,\n    wrapH:400,\n    cropW:200,\n    cropH:200,\n    canvasDom:document.getElementById(\"canvas\")\n});\n\n\nwindow.cropper = cropper;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy90ZXN0LmpzPzg0YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENyb3BwZXIgZnJvbSAnLi4vYnVpbGQvbGliLmpzJ1xuY29uc29sZS5sb2coQ3JvcHBlcilcblxudmFyIGNyb3BwZXIgPSBuZXcgQ3JvcHBlcignaHR0cDovL2RhdGFnZXR0ZXIuY246OTAwMC9kYXRhZ2V0dGVyLmNuL3B1YmxpYy9vcmlnaW5hbC93eF90ZXN0X2tpZF9vWFdQbjVWNVl4aVFWb1N5SzNJREZRMlhucWhNXy5qcGdfMTYyMTc3Njg4MzQzN180Mjg5Mzk2X3d4X3Rlc3Rfa2lkX29YV1BuNVY1WXhpUVZvU3lLM0lERlEyWG5xaE1fLmpwZycse1xuICAgIHdyYXBXOjMwMCxcbiAgICB3cmFwSDo0MDAsXG4gICAgY3JvcFc6MjAwLFxuICAgIGNyb3BIOjIwMCxcbiAgICBjYW52YXNEb206ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYW52YXNcIilcbn0pO1xuXG5cbndpbmRvdy5jcm9wcGVyID0gY3JvcHBlcjtcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///4\n")}])}));